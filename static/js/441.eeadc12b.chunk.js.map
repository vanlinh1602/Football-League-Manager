{"version":3,"file":"static/js/441.eeadc12b.chunk.js","mappings":"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","sources":["components/Header/index.tsx","features/leagues/store/saga.ts","features/leagues/store/index.ts","features/leagues/store/reducer.ts","features/leagues/store/selectors.ts","features/teams/store/selectors.ts","features/leagues/compoments/LeagueCard/index.tsx","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","features/leagues/compoments/LeagueEditor/index.tsx","pages/Leagues/index.tsx","utils/commons.ts","utils/image.ts","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js"],"sourcesContent":["import { PageHeader } from 'antd';\n\ntype Props = {\n  content: any;\n};\n\nconst Header = ({ content }: Props) => (\n  <PageHeader style={{ backgroundColor: 'white', marginBottom: 5, height: 64 }}>\n    {content}\n  </PageHeader>\n);\n\nexport default Header;\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { notification } from 'antd';\nimport _ from 'lodash';\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport { backendService } from 'services';\nimport formatError from 'utils/formatError';\n\nimport type { League } from '../types';\nimport { actions as leagueAction } from './reducer';\n\nfunction* getLeagues() {\n  try {\n    const result: WithApiResult<League[]> = yield backendService.post('api/getLeagues', {});\n    if (result.kind === 'ok') {\n      if (result.data.length) {\n        const leagues = _.keyBy(result.data, 'id');\n        yield put(leagueAction.fetchLeagues(leagues));\n      } else {\n        yield put(leagueAction.fetchLeagues({}));\n      }\n    } else {\n      yield put(leagueAction.fetchLeagues({}));\n      notification.error({\n        message: 'Lỗi tra cứu',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(leagueAction.fetchLeagues({}));\n    notification.error({\n      message: 'Lỗi tra cứu',\n      description: formatError(error),\n    });\n  }\n}\n\nfunction* updateLeague(action: PayloadAction<League>) {\n  try {\n    const data = action.payload;\n\n    const result: WithApiResult<string> = yield backendService.post('api/updateLeague', {\n      data,\n    });\n\n    if (result.kind === 'ok') {\n      yield put(leagueAction.fetchLeagues({ [data.id]: data }));\n    } else {\n      yield put(leagueAction.fetchLeagues({}));\n      notification.error({\n        message: 'Lỗi cập nhật',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(leagueAction.fetchLeagues({}));\n    notification.error({\n      message: 'Lỗi cập nhập',\n      description: formatError(error),\n    });\n  }\n}\n\nexport default function* saga() {\n  yield all([\n    takeEvery(leagueAction.getLeagues.type, getLeagues),\n    takeEvery(leagueAction.updateLeague.type, updateLeague),\n  ]);\n}\n","import { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\n\nimport { actions, key, reducer } from './reducer';\nimport saga from './saga';\n\nexport const useLeagueSlide = () => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({\n    key,\n    saga,\n  });\n  return { actions };\n};\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\n\nimport type { League, LeagueStore } from '../types';\n\nexport const initialState: LeagueStore = { handling: false };\n\nconst slice = createSlice({\n  name: 'leagueStore',\n  initialState,\n  reducers: {\n    fetchLeagues(state, action: PayloadAction<CustomObject<League>>) {\n      state.handling = false;\n      state.data = {\n        ...state.data,\n        ...action.payload,\n      };\n    },\n    getLeagues(state) {\n      state.handling = true;\n    },\n    updateLeague(state, _action: PayloadAction<League>) {\n      state.handling = true;\n    },\n  },\n});\n\nexport const { actions, name: key, reducer } = slice;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.leagueStore || initialState;\n\nexport const selectLeagueHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectLeagues = createSelector([selectDomain], (state) => state.data);\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.teamStore || initialState;\n\nexport const selectTeamHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectTeamData = createSelector([selectDomain], (state) => state.data);\n","import { EditOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Card, Popover, Row, Typography } from 'antd';\nimport type { League } from 'features/leagues/types';\nimport moment from 'moment';\nimport { useNavigate } from 'react-router-dom';\n\ntype Props = {\n  info: League;\n  handleEdit: () => void;\n};\n\nconst LeagueCard = ({ info, handleEdit }: Props) => {\n  const navigate = useNavigate();\n  return (\n    <Card\n      style={{ width: 300, margin: '20px', borderRadius: '20px', overflow: 'hidden' }}\n      bodyStyle={{ borderRadius: 12 }}\n      cover={<img alt=\"\" src={info.image} style={{ height: 200, objectFit: 'cover' }} />}\n      actions={[\n        <Popover content=\"Xem các trận đấu\">\n          <EyeOutlined key=\"view\" onClick={() => navigate(`/matches/${info.id}`)} />\n        </Popover>,\n        <Popover content=\"Chỉnh sửa thông tin\">\n          <EditOutlined key=\"edit\" onClick={handleEdit} />,\n        </Popover>,\n      ]}\n    >\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Row>\n          <Typography.Title level={5}>{info.name}</Typography.Title>\n        </Row>\n        <Row>\n          <Typography>\n            {`${moment(info.start).format('DD/MM/YYYY')} - ${moment(info.end).format(\n              'DD/MM/YYYY'\n            )}`}\n          </Typography>\n        </Row>\n      </div>\n    </Card>\n  );\n};\n\nexport default LeagueCard;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PlusOutlined.displayName = 'PlusOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","import { DeleteOutlined, PlusOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Col,\n  DatePicker,\n  Form,\n  Input,\n  Modal,\n  Popover,\n  Row,\n  Select,\n  Table,\n  TableColumnType,\n  Typography,\n  Upload,\n} from 'antd';\nimport type { RcFile } from 'antd/lib/upload';\nimport { useLeagueSlide } from 'features/leagues/store';\nimport type { League } from 'features/leagues/types';\nimport { selectTeamData } from 'features/teams/store/selectors';\nimport type { Team } from 'features/teams/types';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { generateID } from 'utils/commons';\nimport { getBase64 } from 'utils/image';\n\ntype Props = {\n  info: Partial<League>;\n  onClose: () => void;\n};\n\ntype TeamOption = {\n  label: string;\n  value: string;\n  logo: string;\n};\n\ntype ModalProp = {\n  teamOptions: TeamOption[];\n  onCancel: () => void;\n  onConfirm: (id: string) => void;\n};\n\nconst ModalSelect = ({ teamOptions, onCancel, onConfirm }: ModalProp) => {\n  const [form] = Form.useForm<{ id: string }>();\n  return (\n    <Modal\n      title=\"Chọn đội bóng\"\n      open\n      onCancel={onCancel}\n      footer={[\n        <Button onClick={onCancel}>Huỷ</Button>,\n        <Button\n          type=\"primary\"\n          onClick={async () => {\n            try {\n              const { id } = await form.validateFields();\n              onConfirm(id);\n              onCancel();\n            } catch (error) {}\n          }}\n        >\n          Lưu\n        </Button>,\n      ]}\n    >\n      <Form form={form}>\n        <Form.Item name=\"id\">\n          <Select options={teamOptions} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst LeagueEditor = ({ info, onClose }: Props) => {\n  const dispatch = useDispatch();\n  const { actions } = useLeagueSlide();\n\n  const allTeams = useSelector(selectTeamData);\n\n  const [form] = Form.useForm<League>();\n  const [image, setImage] = useState<string>(info.image || '');\n  const [teamSelected, setTeamSelected] = useState<string[]>(info.participants ?? []);\n  const [showSelect, setShowSelect] = useState<boolean>(false);\n\n  const teamOption: TeamOption[] = useMemo(\n    () =>\n      Object.values(allTeams ?? {})\n        .map(({ id, logo, name }) => ({ label: name, value: id, logo }))\n        .filter(({ value }) => !teamSelected.includes(value)),\n    [allTeams, teamSelected]\n  );\n\n  const columns: TableColumnType<Team>[] = useMemo(\n    () => [\n      {\n        title: 'STT',\n        width: 50,\n        render: (_any, _record, index) => index + 1,\n      },\n      {\n        title: (\n          <Row justify=\"space-between\">\n            <Col>\n              <Typography>Đội tham gia</Typography>\n            </Col>\n            <Col>\n              <Popover content=\"Thêm đội bóng\">\n                <PlusOutlined style={{ color: '#94d82d' }} onClick={() => setShowSelect(true)} />\n              </Popover>\n            </Col>\n          </Row>\n        ),\n        dataIndex: 'name',\n        render: (_any, record) => (\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col>\n              <Row align=\"middle\" gutter={5}>\n                <Col>\n                  <img style={{ borderRadius: 48 }} width={40} src={record.logo} alt=\"\" />\n                </Col>\n                <Col>\n                  <b>{record.name}</b>\n                </Col>\n              </Row>\n            </Col>\n            <Col>\n              <Popover content=\"Xoá đội bóng\">\n                <DeleteOutlined\n                  style={{ color: '#ff2500' }}\n                  size={24}\n                  onClick={() => setTeamSelected((prev) => prev.filter((id) => id !== record.id))}\n                />\n              </Popover>\n            </Col>\n          </Row>\n        ),\n      },\n    ],\n    []\n  );\n\n  const handlerUpload = async (file: RcFile) => {\n    const base64 = await getBase64(file);\n    setImage(base64);\n  };\n\n  const handleSave = async () => {\n    try {\n      const formData = await form.validateFields();\n      const dataUpdate: League = {\n        ...info,\n        ...formData,\n        start: moment(formData.start).valueOf(),\n        end: moment(formData.end).valueOf(),\n        image,\n        participants: teamSelected,\n      };\n\n      if (!dataUpdate.id) {\n        dataUpdate.id = generateID();\n      }\n      dispatch(actions.updateLeague(dataUpdate));\n      onClose();\n    } catch {}\n  };\n\n  return (\n    <Modal\n      width={700}\n      open\n      title={`${info.id ? 'Sửa thông tin' : 'Thêm'} giải đấu`}\n      onCancel={onClose}\n      footer={[\n        <Button type=\"primary\" onClick={handleSave}>\n          Lưu\n        </Button>,\n      ]}\n    >\n      {showSelect ? (\n        <ModalSelect\n          teamOptions={teamOption}\n          onCancel={() => setShowSelect(false)}\n          onConfirm={(id) => {\n            setTeamSelected((prev) => _.uniq([...prev, id]));\n          }}\n        />\n      ) : null}\n      <Form\n        form={form}\n        layout=\"vertical\"\n        initialValues={{\n          ...info,\n          start: info.start ? moment(info.start) : '',\n          end: info.end ? moment(info.end) : '',\n        }}\n      >\n        <Row gutter={10}>\n          <Col span={8}>\n            <Upload.Dragger\n              name=\"file\"\n              accept=\"image/*\"\n              height={240}\n              listType=\"picture\"\n              showUploadList={false}\n              beforeUpload={handlerUpload}\n            >\n              {image ? (\n                <img src={image} alt=\"avatar\" style={{ width: '100%' }} />\n              ) : (\n                <div>Thêm hình ảnh</div>\n              )}\n            </Upload.Dragger>\n          </Col>\n          <Col span={16}>\n            <Form.Item name=\"name\" label=\"Tên giải đấu\" rules={[{ required: true }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"start\" label=\"Ngày bắt đầu\" rules={[{ required: true }]}>\n              <DatePicker style={{ width: '100%' }} format=\"D/M/Y\" />\n            </Form.Item>\n            <Form.Item name=\"end\" label=\"Ngày kết thúc\" rules={[{ required: true }]}>\n              <DatePicker style={{ width: '100%' }} format=\"D/M/Y\" />\n            </Form.Item>\n            <Form.Item name=\"description\" label=\"Mô tả\" rules={[{ required: true }]}>\n              <Input.TextArea />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n      <Table columns={columns} dataSource={teamSelected.map((id) => allTeams![id])} />\n    </Modal>\n  );\n};\n\nexport default LeagueEditor;\n","import { Button, Col, Layout, Row, Typography } from 'antd';\nimport { Header, Waiting } from 'components';\nimport { LeagueCard, LeagueEditor } from 'features/leagues/compoments';\nimport { useLeagueSlide } from 'features/leagues/store';\nimport { selectLeagueHandling, selectLeagues } from 'features/leagues/store/selectors';\nimport type { League } from 'features/leagues/types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Leagues = () => {\n  const dispatch = useDispatch();\n  const { actions } = useLeagueSlide();\n\n  const handling = useSelector(selectLeagueHandling);\n  const leagueData = useSelector(selectLeagues);\n  const [edit, setEdit] = useState<Partial<League>>();\n\n  return (\n    <div>\n      {handling ? <Waiting /> : null}\n      {edit ? <LeagueEditor info={edit} onClose={() => setEdit(undefined)} /> : null}\n      <Header\n        content={\n          <Row justify=\"space-between\">\n            <Col>\n              <Typography.Title level={4}>Football Leagues</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={{ marginRight: 10 }}\n                onClick={() => {\n                  dispatch(actions.getLeagues());\n                }}\n              >\n                Tra cứu\n              </Button>\n              <Button\n                type=\"text\"\n                style={{ backgroundColor: '#82c91e', color: 'white' }}\n                onClick={() => setEdit({})}\n              >\n                Thêm giải đấu\n              </Button>\n            </Col>\n          </Row>\n        }\n      />\n      <Layout style={{ overflowY: 'scroll', height: window.innerHeight - 100 }}>\n        <Row>\n          {Object.values(leagueData ?? {}).map((league) => (\n            <Col span={6}>\n              <LeagueCard info={league} handleEdit={() => setEdit(league)} />\n            </Col>\n          ))}\n        </Row>\n      </Layout>\n    </div>\n  );\n};\n\nexport default Leagues;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\n\nexport const getYearOptions = () => {\n  const currentYear = moment().year();\n  return _.range(currentYear - 10, currentYear + 10).map((year) => ({\n    label: `Năm ${year}`,\n    value: year,\n  }));\n};\n\nexport const generateID = (\n  ids: string[] = [],\n  size = 10,\n  options: { prefix?: string; suffix?: string } = {}\n): string => {\n  const id = `${options.prefix ?? ''}${nanoid(size)}${options.suffix ?? ''}`;\n  if (ids.includes(id)) return generateID(ids, size, options);\n  return id;\n};\n\nexport const parseFullName = (fullName: string) => {\n  const words = _.split(fullName, ' ');\n  return {\n    firstName: _.join(_.dropRight(words), ' '),\n    lastName: _.last(words),\n  };\n};\n","import type { RcFile } from 'antd/lib/upload';\n\nexport const getBase64 = (file: RcFile): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve((reader.result as string).toString());\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const getUrlImageBase64 = (base64: string) => `data:image/jpeg;base64,${base64}`;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  EyeOutlined.displayName = 'EyeOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(EyeOutlined);"],"names":["_ref","content","_jsx","PageHeader","style","backgroundColor","marginBottom","height","children","getLeagues","result","backendService","post","kind","data","length","leagues","_","put","leagueAction","fetchLeagues","notification","error","message","description","formatError","updateLeague","action","payload","id","saga","all","takeEvery","type","useLeagueSlide","useInjectReducer","key","reducer","useInjectSaga","actions","initialState","handling","slice","createSlice","name","reducers","state","_action","selectDomain","leagueStore","selectLeagueHandling","createSelector","selectLeagues","teamStore","selectTeamHandling","selectTeamData","info","handleEdit","navigate","useNavigate","Card","width","margin","borderRadius","overflow","bodyStyle","cover","alt","src","image","objectFit","Popover","EyeOutlined","onClick","concat","_jsxs","EditOutlined","display","alignItems","flexDirection","Row","Typography","Title","level","moment","start","format","end","PlusOutlined","props","ref","React","AntdIcon","_extends","icon","PlusOutlinedSvg","DeleteOutlined","DeleteOutlinedSvg","ModalSelect","teamOptions","onCancel","onConfirm","form","Form","useForm","Modal","title","open","footer","Button","async","validateFields","Item","Select","options","_ref2","_info$participants","onClose","dispatch","useDispatch","allTeams","useSelector","setImage","useState","teamSelected","setTeamSelected","participants","showSelect","setShowSelect","teamOption","useMemo","Object","values","map","_ref3","logo","label","value","filter","_ref4","includes","columns","render","_any","_record","index","justify","Col","color","dataIndex","record","align","gutter","size","prev","formData","dataUpdate","valueOf","generateID","layout","initialValues","span","Upload","Dragger","accept","listType","showUploadList","beforeUpload","base64","getBase64","file","rules","required","Input","DatePicker","TextArea","Table","dataSource","Leagues","leagueData","edit","setEdit","Waiting","LeagueEditor","undefined","Header","marginRight","Layout","overflowY","window","innerHeight","league","LeagueCard","_options$prefix","_options$suffix","ids","arguments","prefix","nanoid","suffix","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","toString","onerror","EyeOutlinedSvg"],"sourceRoot":""}