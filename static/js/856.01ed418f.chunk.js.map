{"version":3,"file":"static/js/856.01ed418f.chunk.js","mappings":"mLAMA,MAMA,EANeA,IAAA,IAAC,QAAEC,GAAgBD,EAAA,OAChCE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAO,CAAEC,gBAAiB,QAASC,aAAc,EAAGC,OAAQ,IAAKC,SAC1EP,GACU,E,2ICEf,SAAUQ,EAAUC,GAClB,IACE,MAAMC,EAASD,EAAOE,QAChBC,QAAuCC,EAAAA,EAAeC,KAAK,gBAAiB,CAAEJ,WACpF,GAAoB,OAAhBE,EAAOG,KACT,GAAIH,EAAOI,KAAKC,OAAQ,CACtB,MAAMC,EAAUC,IAAAA,MAAQP,EAAOI,KAAM,YAC/BI,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,YAAYJ,GACpC,YACQE,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,YAAY,CAAC,eAG/BF,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,wBACTC,aAAaC,EAAAA,EAAAA,GAAYf,IAG/B,CAAE,MAAOY,SACDJ,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,wBACTC,aAAaC,EAAAA,EAAAA,GAAYH,IAE7B,CACF,CAEA,SAAUI,EAAYnB,GACpB,IACE,MAAMO,EAAOP,EAAOE,QAEdC,QAAsCC,EAAAA,EAAeC,KAAK,kBAAmB,CACjFE,SAGkB,OAAhBJ,EAAOG,WACHK,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,YAAY,CAAE,CAACN,EAAKa,IAAKb,YAEzCI,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,YAAY,CAAC,IACnCC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,8BACTC,aAAaC,EAAAA,EAAAA,GAAYf,KAG/B,CAAE,MAAOY,SACDJ,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,8BACTC,aAAaC,EAAAA,EAAAA,GAAYH,IAE7B,CACF,CACA,SAAUM,EAAUrB,GAClB,IACE,MAAMsB,EAAQtB,EAAOE,QACfC,QAAuCC,EAAAA,EAAeC,KAAK,gBAAiB,CAAEiB,UACpF,GAAoB,OAAhBnB,EAAOG,KACT,GAAIH,EAAOI,KAAKC,OAAQ,CACtB,MAAMe,EAASb,IAAAA,MAAQP,EAAOI,KAAM,YAC9BI,EAAAA,EAAAA,IAAIC,EAAAA,GAAYY,YAAY,CAAEF,QAAOf,KAAMgB,IACnD,YACQZ,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,YAAY,CAAC,eAG/BF,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,wBACTC,aAAaC,EAAAA,EAAAA,GAAYf,IAG/B,CAAE,MAAOY,SACDJ,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,wBACTC,aAAaC,EAAAA,EAAAA,GAAYH,IAE7B,CACF,CAEA,SAAUU,EAAYzB,GACpB,IACE,MAAM0B,EAAY1B,EAAOE,QAEnBC,QAAsCC,EAAAA,EAAeC,KAAK,kBAAmB,CACjFE,KAAMmB,IAGR,GAAoB,OAAhBvB,EAAOG,MAIT,SAHMK,EAAAA,EAAAA,IACJC,EAAAA,GAAYY,YAAY,CAAEF,MAAOI,EAAUJ,MAAOf,KAAM,CAAE,CAACmB,EAAUN,IAAKM,MAErD,UAAnBA,EAAUC,KAAkB,CAC9B,MAAML,QAAqBM,EAAAA,EAAAA,KAAQC,IAAUC,EAAAA,EAAAA,IAAYD,EAAOH,EAAUJ,SACpES,EAAoBrB,IAAAA,UAAYY,GACtC,GAAII,EAAUM,OAAOC,OAASX,EAAMY,MAAO,CACzC,MAAMC,EAAYzB,IAAAA,IAAMY,EAAO,CAAC,aAAc,SAAU,GACxDZ,IAAAA,IAAMqB,EAAY,CAAC,aAAc,SAAUI,EAAY,EACzD,KAAO,CACL,MAAMA,EAAYzB,IAAAA,IAAMY,EAAO,CAAC,aAAc,SAAU,GACxDZ,IAAAA,IAAMqB,EAAY,CAAC,aAAc,SAAUI,EAAY,EACzD,OACMxB,EAAAA,EAAAA,IAAIC,EAAAA,GAAYO,YAAYY,GACpC,aAEMpB,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,8BACTC,aAAaC,EAAAA,EAAAA,GAAYf,IAG/B,CAAE,MAAOY,SACDJ,EAAAA,EAAAA,IAAIC,EAAAA,GAAYC,eACtBC,EAAAA,EAAaC,MAAM,CACjBC,QAAS,8BACTC,aAAaC,EAAAA,EAAAA,GAAYH,IAE7B,CACF,CACe,SAAUqB,UACjBC,EAAAA,EAAAA,IAAI,EACRC,EAAAA,EAAAA,IAAU1B,EAAAA,GAAYb,UAAUwC,KAAMxC,IACtCuC,EAAAA,EAAAA,IAAU1B,EAAAA,GAAYS,UAAUkB,KAAMlB,IACtCiB,EAAAA,EAAAA,IAAU1B,EAAAA,GAAYO,YAAYoB,KAAMpB,IACxCmB,EAAAA,EAAAA,IAAU1B,EAAAA,GAAYa,YAAYc,KAAMd,IAE5C,CCnIO,MAAMe,EAAgBA,MAC3BC,EAAAA,EAAAA,GAAiB,CAAEC,IAAG,KAAEC,QAAQ,QAChCC,EAAAA,EAAAA,GAAc,CACZF,IAAG,KACHN,KACF,IACO,CAAES,QAAQ,M,4ECNZ,MAAMC,EAA2B,CAAEC,UAAU,GAE9CC,GAAQC,EAAAA,EAAAA,GAAY,CACxBtB,KAAM,aACNmB,eACAI,SAAU,CACRrC,WAAAA,CAAYgB,EAAO7B,GACjB6B,EAAMkB,UAAW,EACb/C,EAAOE,UACT2B,EAAMsB,QAAU,IACXtB,EAAMsB,WACNnD,EAAOE,SAGhB,EACAsB,WAAAA,CAAYK,EAAO7B,GAEjB,GADA6B,EAAMkB,UAAW,EACb/C,EAAOE,QAAS,CAAC,IAADkD,EAClB,MAAM,MAAE9B,EAAK,KAAEf,GAASP,EAAOE,QAC/B2B,EAAMN,OAAS,IACVM,EAAMN,OACT,CAACD,GAAQ,IACQ,QAAf8B,EAAGvB,EAAMN,cAAM,IAAA6B,OAAA,EAAZA,EAAe9B,MACff,GAGT,CACF,EACAR,SAAAA,CAAU8B,EAAOwB,GACfxB,EAAMkB,UAAW,CACnB,EACA1B,SAAAA,CAAUQ,EAAOwB,GACfxB,EAAMkB,UAAW,CACnB,EACA5B,WAAAA,CAAYU,EAAOwB,GACjBxB,EAAMkB,UAAW,CACnB,EACAtB,WAAAA,CAAYI,EAAOwB,GACjBxB,EAAMkB,UAAW,CACnB,MAIS,QAAEF,EAASlB,KAAMe,EAAG,QAAEC,GAAYK,C,sFC3C/C,MAAMM,EAAgBzB,IAA0B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO0B,aAAcT,EAAAA,GAC1DU,EAAaA,CAAC3B,EAAkB4B,IAAiBA,EAE1CC,GAAsBC,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMkB,WAEtEa,GAAeD,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMsB,UAE/DU,GAAeF,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMN,SAE/DuC,GAAsBH,EAAAA,EAAAA,IAAe,CAACC,EAAcJ,IAAa,CAACL,EAASlD,IACvE8D,OAAOC,OAAc,OAAPb,QAAO,IAAPA,EAAAA,EAAW,CAAC,GAAGc,QAAQ3C,GAAUA,EAAMrB,SAAWA,MAIpE6B,GAAc6B,EAAAA,EAAAA,IACzB,CAACC,EAAcJ,IACf,CAACL,EAAS/B,IAAc,OAAP+B,QAAO,IAAPA,OAAO,EAAPA,EAAU/B,KAGhB8C,GAAoBP,EAAAA,EAAAA,IAC/B,CAACE,EAAcL,IACf,CAACjC,EAAQD,IAAgB,OAANC,QAAM,IAANA,OAAM,EAANA,EAASD,I,8HCf9B,SAAU6C,EAAWnE,GACnB,IACE,MAAMiC,EAAOjC,EAAOE,QACdC,QAAwCC,EAAAA,EAAeC,KAAK,iBAAkB,CAAE4B,SACtF,GAAoB,OAAhB9B,EAAOG,KACT,GAAIH,EAAOI,KAAKC,OAAQ,CACtB,MAAM4D,EAAU1D,IAAAA,MAAQP,EAAOI,KAAM,YAC/BI,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,aAAa,CAAErC,OAAMmC,YAC/C,YACQzD,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,2BAGpB3D,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,gBACxBxD,EAAAA,EAAaC,MAAM,CACjBC,QAAS,wBACTC,aAAaC,EAAAA,EAAAA,GAAYf,IAG/B,CAAE,MAAOY,SACDJ,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,gBACxBxD,EAAAA,EAAaC,MAAM,CACjBC,QAAS,wBACTC,aAAaC,EAAAA,EAAAA,GAAYH,IAE7B,CACF,CAEA,SAAUwD,EAAavE,GACrB,IACE,MAAMwE,EAAaxE,EAAOE,SACpB,KAAE+B,EAAI,GAAEb,GAAOoD,EAEfC,QAA0C7C,EAAAA,EAAAA,KAAQC,IACtD6C,EAAAA,EAAAA,GAAqB7C,EAAOI,KAExB9B,QAAsCC,EAAAA,EAAeC,KAAK,mBAAoB,CAClFE,KAAMiE,IAGR,GAAoB,OAAhBrE,EAAOG,KAAe,CACxB,MAAMyB,EAAarB,IAAAA,UAAY+D,GAC/B/D,IAAAA,IAAMqB,EAAY,CAACX,GAAKoD,SAElB7D,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,aAAa,CAAErC,OAAMmC,QAASrC,IACxD,YACQpB,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,gBACxBxD,EAAAA,EAAaC,MAAM,CACjBC,QAAS,8BACTC,aAAaC,EAAAA,EAAAA,GAAYf,IAG/B,CAAE,MAAOY,SACDJ,EAAAA,EAAAA,IAAI0D,EAAAA,GAAcC,gBACxBxD,EAAAA,EAAaC,MAAM,CACjBC,QAAS,8BACTC,aAAaC,EAAAA,EAAAA,GAAYH,IAE7B,CACF,CAEe,SAAUqB,UACjBC,EAAAA,EAAAA,IAAI,EACRC,EAAAA,EAAAA,IAAU+B,EAAAA,GAAcF,WAAW5B,KAAM4B,IACzC7B,EAAAA,EAAAA,IAAU+B,EAAAA,GAAcE,aAAahC,KAAMgC,IAE/C,CCvEO,MAAMI,EAAiBA,MAC5BlC,EAAAA,EAAAA,GAAiB,CAAEC,IAAG,KAAEC,QAAQ,QAChCC,EAAAA,EAAAA,GAAc,CACZF,IAAG,KACHN,KACF,IACO,CAAES,QAAQ,M,4ECNZ,MAAMC,EAA6B,CAAEC,UAAU,GAEhDC,GAAQC,EAAAA,EAAAA,GAAY,CACxBtB,KAAM,cACNmB,eACAI,SAAU,CACRoB,YAAAA,CACEzC,EACA7B,GAGA,GADA6B,EAAMkB,UAAW,EACb/C,EAAOE,QAAS,CAClB,MAAM,KAAE+B,EAAI,QAAEmC,GAAYpE,EAAOE,QACjC2B,EAAMtB,KAAO,IACRsB,EAAMtB,KACT,CAAC0B,GAAOmC,EAEZ,CACF,EACAD,UAAAA,CAAWtC,EAAOwB,GAChBxB,EAAMkB,UAAW,CACnB,EACAwB,YAAAA,CAAa1C,EAAOwB,GAClBxB,EAAMkB,UAAW,CACnB,MAIS,QAAEF,EAASlB,KAAMe,EAAG,QAAEC,GAAYK,C,mEC5B/C,MAAMM,EAAgBzB,IAA0B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO+C,cAAe9B,EAAAA,GAGpD+B,GAAuBlB,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMkB,WAEvE+B,GAAenB,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMtB,OAE/DmE,GAAuBf,EAAAA,EAAAA,IAClC,CAACmB,EAPgBtB,CAAC3B,EAAkB4B,IAAiBA,IAQrD,CAACW,EAASX,IAAgB,OAAPW,QAAO,IAAPA,OAAO,EAAPA,EAAUX,I,iECT/B,MAAMH,EAAgBzB,IAA0B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOkD,YAAajC,EAAAA,GAElDkC,GAAqBrB,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMkB,WAErEkC,GAAiBtB,EAAAA,EAAAA,IAAe,CAACL,IAAgBzB,GAAUA,EAAMtB,M,g6QCLjE2E,EAAsB,CACjC,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,YAGDC,EAAoC,CAC/CC,GAAI,aACJC,GAAI,cACJC,GAAI,YACJC,IAAK,uBACLC,GAAI,qBACJC,GAAI,UACJC,EAAG,UAGQnE,EAA+B,CAC1CoE,MAAO,QACPC,MAAO,QACPC,QAAS,UACTC,WAAY,cACZC,OAAQ,SACRC,QAAS,WACTC,WAAY,eAGDC,EAAiBC,EAAYC,KAAI9G,IAAA,IAAC,KAAEqC,EAAI,KAAE0E,GAAM/G,EAAA,MAAM,CAAEgH,MAAO3E,EAAM4E,MAAOF,EAAM,G,mOCpBxF,MAqEP,EArE2B/G,IAA8C,IAA7C,KAAEkH,EAAI,SAAEC,EAAQ,aAAEC,GAAqBpH,EACjE,MAAMqH,GAAWC,EAAAA,EAAAA,OACX,QAAE/D,IAAYL,EAAAA,EAAAA,MACbqE,GAAQC,EAAAA,EAAKC,WACb9E,EAAM+E,IAAWC,EAAAA,EAAAA,UAAS,IAC3B7C,GAAU8C,EAAAA,EAAAA,KAAarF,IAAqB6C,EAAAA,EAAAA,GAAqB7C,EAAOI,KAiB9E,OACEzC,EAAAA,EAAAA,KAAC2H,EAAAA,EAAK,CACJC,MAAI,EACJC,MAAK,GAAAC,OAAMd,EAAKpF,GAAc,WAAT,UAAc,sBACnCqF,SAAUA,EACVc,OAAQ,EACN/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAM,CAACjF,KAAK,UAAUkF,QArBVC,UACjB,IACE,MAAMC,QAAiBd,EAAKe,iBACtB7F,EAAa,IACdyE,KACAmB,GAEAnB,EAAKpF,KACRW,EAAWX,IAAKyG,EAAAA,EAAAA,MAElBlB,EAAS9D,EAAQpB,YAAYM,IAC7B0E,GACF,CAAE,MAAO1F,GAAQ,GAS8BjB,SAAC,cAG5CA,UAEFgI,EAAAA,EAAAA,MAAChB,EAAAA,EAAI,CAACD,KAAMA,EAAMkB,cAAevB,EAAMwB,OAAO,WAAUlI,SAAA,EACtDgI,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACC,OAAQ,GAAGpI,SAAA,EACdN,EAAAA,EAAAA,KAAC2I,EAAAA,EAAG,CAACC,KAAM,GAAGtI,UACZN,EAAAA,EAAAA,KAACsH,EAAAA,EAAKuB,KAAI,CAAC1G,KAAK,OAAO2E,MAAM,2BAAcgC,MAAO,CAAC,CAAEC,UAAU,IAAQzI,UACrEN,EAAAA,EAAAA,KAACgJ,EAAAA,EAAM,CACLC,QAAS1E,OAAO2E,QAAQnH,EAAAA,IAAQ6E,KAAIuC,IAAA,IAAEvH,EAAIO,GAAKgH,EAAA,MAAM,CAAErC,MAAO3E,EAAM4E,MAAOnF,EAAI,WAIrF5B,EAAAA,EAAAA,KAAC2I,EAAAA,EAAG,CAACC,KAAM,GAAGtI,UACZN,EAAAA,EAAAA,KAACsH,EAAAA,EAAKuB,KAAI,CAAC1G,KAAK,SAAS2E,MAAM,mBAAWgC,MAAO,CAAC,CAAEC,UAAU,IAAQzI,UACpEN,EAAAA,EAAAA,KAACoJ,EAAAA,EAAW,CAACC,UAAU,YAI7BrJ,EAAAA,EAAAA,KAACsH,EAAAA,EAAKuB,KAAI,CAAC1G,KAAM,CAAC,SAAU,QAAS2E,MAAM,gBAAMgC,MAAO,CAAC,CAAEC,UAAU,IAAQzI,UAC3EN,EAAAA,EAAAA,KAACgJ,EAAAA,EAAM,CACLC,QAAS/B,EACToC,SAAWvC,IACTS,EAAQT,EAAM,OAIpB/G,EAAAA,EAAAA,KAACsH,EAAAA,EAAKuB,KAAI,CAAC1G,KAAM,CAAC,SAAU,UAAW2E,MAAM,oBAASxG,UACpDN,EAAAA,EAAAA,KAACgJ,EAAAA,EAAM,CACLC,QAAS1E,OAAOC,OAAc,OAAPI,QAAO,IAAPA,EAAAA,EAAW,CAAC,GAAGgC,KAAI2C,IAAA,IAAC,GAAE3H,EAAE,KAAEO,GAAMoH,EAAA,MAAM,CAC3DzC,MAAO3E,EACP4E,MAAOnF,EACR,YAID,E,4CC9DZ,MA8IA,EA9Ie4H,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnB,MAAM3C,GAAWC,EAAAA,EAAAA,OACX,QAAE/D,IAAYL,EAAAA,EAAAA,MACZK,QAAS0G,IAAiB5E,EAAAA,EAAAA,MAC1BrD,MAAOkI,IAAYC,EAAAA,EAAAA,MAErBnI,GAAQ4F,EAAAA,EAAAA,KAAarF,IAAqBC,EAAAA,EAAAA,IAAYD,EAAO2H,GAAW,MACxEzG,GAAWmE,EAAAA,EAAAA,IAAYxD,EAAAA,IACvBgG,GAAUxC,EAAAA,EAAAA,IAAYrC,EAAAA,IACtB8E,GAAczC,EAAAA,EAAAA,KAAarF,IAAqBqC,EAAAA,EAAAA,IAAkBrC,EAAO2H,GAAW,OACpF,MAAEtH,EAAK,MAAE0H,EAAK,WAAEC,GAAoB,OAALvI,QAAK,IAALA,EAAAA,EAAS,CAAC,EACzCwI,GAAQ5C,EAAAA,EAAAA,IAAYjC,EAAAA,GACpB8E,GAAe7C,EAAAA,EAAAA,KAAarF,IAAqB6C,EAAAA,EAAAA,GAAqB7C,EAAOK,GAAS,MACtF8H,GAAe9C,EAAAA,EAAAA,KAAarF,IAAqB6C,EAAAA,EAAAA,GAAqB7C,EAAO+H,GAAS,OAE5FK,EAAAA,EAAAA,YAAU,MACHN,GAAeH,GAClB7C,EAAS9D,EAAQxB,UAAUmI,IAExBO,GACHpD,EAAS4C,EAAapF,WAAWjC,GAAS,KAEvC8H,GACHrD,EAAS4C,EAAapF,WAAWyF,GAAS,IAC5C,GAEC,IAEH,MAAOM,EAAMC,IAAWlD,EAAAA,EAAAA,YAElBmD,GAAoCC,EAAAA,EAAAA,UACxC,IAAM,CACJ,CACEhD,MAAO,MACPiD,MAAO,SACPC,MAAO,GACPC,OAAQA,CAACC,EAAIC,EAAIC,IAAUA,EAAQ,GAErC,CACEtD,MAAO,oBACPuD,UAAW,OACXN,MAAO,SACPE,OAASjE,GAAkBhF,EAAAA,GAAOgF,IAEpC,CACEc,MAAO,iBACPkD,MAAO,IACPD,MAAO,SACPM,UAAW,SACXJ,OAASjE,GAAK,oBAAAe,OAAiBf,IAEjC,CACEc,MAAO,gBACPiD,MAAO,SACPM,UAAW,SACXJ,OAAQA,CAACK,EAAMC,KAAM,IAAAC,EAAA,OAAU,OAALjB,QAAK,IAALA,GAA2B,QAAtBiB,EAALjB,EAAQgB,EAAO9I,OAAOC,aAAK,IAAA8I,OAAtB,EAALA,EAA6BpJ,IAAI,GAE7D,CACE0F,MAAO,mBACPiD,MAAO,SACPM,UAAW,SACXJ,OAAQA,CAACK,EAAMC,KAAY,IAADE,EACxB,MAAM5G,EAAU0G,EAAO9I,OAAOC,QAAc,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOY,OAAQ6H,EAAeC,EACrE,OAAc,OAAP5F,QAAO,IAAPA,GAAqC,QAA9B4G,EAAP5G,EAAU0G,EAAO9I,OAAOiJ,QAAU,WAAG,IAAAD,OAA9B,EAAPA,EAAuCrJ,IAAI,KAIxD,CAACL,EAAOyI,EAAcC,EAAcF,IAEtC,OACEhC,EAAAA,EAAAA,MAAA,OAAAhI,SAAA,CACGiD,GAAY2G,GAAUlK,EAAAA,EAAAA,KAAC0L,EAAAA,EAAO,IAAM,KACpChB,GACC1K,EAAAA,EAAAA,KAAC2L,EAAW,CACV3E,KAAM0D,EACNxD,aAAc,CACZ,CACEJ,OAAY,OAALwD,QAAK,IAALA,GAAoB,QAAfb,EAALa,EAAQ5H,GAAS,WAAG,IAAA+G,OAAf,EAALA,EAAsBtH,OAAQ,GACrC4E,MAAOrE,GAAS,IAElB,CACEoE,OAAY,OAALwD,QAAK,IAALA,GAAoB,QAAfZ,EAALY,EAAQF,GAAS,WAAG,IAAAV,OAAf,EAALA,EAAsBvH,OAAQ,GACrC4E,MAAOqD,GAAS,KAGpBnD,SAAUA,IAAM0D,OAAQiB,KAExB,MACJ5L,EAAAA,EAAAA,KAAC6L,EAAAA,EAAM,CACL9L,SACEC,EAAAA,EAAAA,KAAA,OAAAM,UACEgI,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CAACqD,QAAQ,SAAQxL,SAAA,EACnBN,EAAAA,EAAAA,KAAC+L,EAAAA,EAAWC,MAAK,CAACC,MAAO,EAAE3L,SAAC,iDAC5BN,EAAAA,EAAAA,KAACgI,EAAAA,EAAM,CACLjF,KAAK,UACL7C,MAAO,CAAEgM,SAAU,WAAYC,MAAO,IACtClE,QAASA,IAAM0C,EAAQ,CAAE7I,MAAOkI,IAAW1J,SAC5C,sCAOTgI,EAAAA,EAAAA,MAAC8D,EAAAA,EAAM,CACLlM,MAAO,CAAEC,gBAAiB,QAASE,OAAQgM,OAAOC,YAAc,IAAKC,UAAW,UAAWjM,SAAA,EAE3FgI,EAAAA,EAAAA,MAACG,EAAAA,EAAG,CACFqD,QAAQ,gBACRhB,MAAM,SACNpC,OAAQ,GACRxI,MAAO,CAAEsM,WAAY,GAAInM,OAAQ,KAAMC,SAAA,EAEvCgI,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,KAAM,GAAGtI,SAAA,EACZN,EAAAA,EAAAA,KAAA,OAAKyM,IAAU,OAALnC,QAAK,IAALA,GAAe,QAAVX,EAALW,EAAQ5H,UAAO,IAAAiH,OAAV,EAALA,EAAiB+C,KAAMC,IAAI,GAAGzM,MAAO,CAAE6K,MAAO,GAAI6B,aAAc,OAC1E5M,EAAAA,EAAAA,KAAC+L,EAAAA,EAAWC,MAAK,CAACC,MAAO,EAAG/L,MAAO,CAAE2M,UAAW,IAAKvM,SAC7C,OAALgK,QAAK,IAALA,GAAe,QAAVV,EAALU,EAAQ5H,UAAO,IAAAkH,OAAV,EAALA,EAAiBzH,WAGtBnC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAG,CAACC,KAAM,EAAEtI,UACXN,EAAAA,EAAAA,KAAC+L,EAAAA,EAAWC,MAAK,CAACC,MAAO,EAAE3L,SAAA,GAAAwH,QACX,OAAVuC,QAAU,IAAVA,OAAU,EAAVA,EAAY3H,QAAS,EAAC,OAAAoF,QAAgB,OAAVuC,QAAU,IAAVA,OAAU,EAAVA,EAAYD,QAAS,QAGzD9B,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,KAAM,GAAGtI,SAAA,EACZN,EAAAA,EAAAA,KAAA,OAAKyM,IAAU,OAALnC,QAAK,IAALA,GAAe,QAAVT,EAALS,EAAQF,UAAO,IAAAP,OAAV,EAALA,EAAiB6C,KAAMC,IAAI,GAAGzM,MAAO,CAAE6K,MAAO,GAAI6B,aAAc,OAC1E5M,EAAAA,EAAAA,KAAC+L,EAAAA,EAAWC,MAAK,CAACC,MAAO,EAAG/L,MAAO,CAAE2M,UAAW,IAAKvM,SAC7C,OAALgK,QAAK,IAALA,GAAe,QAAVR,EAALQ,EAAQF,UAAO,IAAAN,OAAV,EAALA,EAAiB3H,cAKxBnC,EAAAA,EAAAA,KAAC8M,EAAAA,EAAK,CACJlC,QAASA,EACTmC,WAAYxI,OAAOC,OAAkB,OAAX2F,QAAW,IAAXA,EAAAA,EAAe,CAAC,GAC1C6C,OAAQ,CAAEC,EAAGZ,OAAOC,YAAc,YAGlC,C,8DCzJH,MAQMjE,EAAa,WAIZ,IAAD6E,EAAAC,EAAA,IAHXC,EAAaC,UAAArM,OAAA,QAAA4K,IAAAyB,UAAA,GAAAA,UAAA,GAAG,GAChBC,EAAID,UAAArM,OAAA,QAAA4K,IAAAyB,UAAA,GAAAA,UAAA,GAAG,GACPpE,EAA6CoE,UAAArM,OAAA,QAAA4K,IAAAyB,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEjD,MAAMzL,EAAE,GAAAkG,OAAoB,QAApBoF,EAAMjE,EAAQsE,cAAM,IAAAL,EAAAA,EAAI,IAAEpF,QAAG0F,EAAAA,EAAAA,IAAOF,IAAKxF,OAAiB,QAAjBqF,EAAGlE,EAAQwE,cAAM,IAAAN,EAAAA,EAAI,IACtE,OAAIC,EAAIM,SAAS9L,GAAYyG,EAAW+E,EAAKE,EAAMrE,GAC5CrH,CACT,C","sources":["components/Header/index.tsx","features/matches/store/saga.ts","features/matches/store/index.ts","features/matches/store/reducer.ts","features/matches/store/selectors.ts","features/players/store/saga.ts","features/players/store/index.ts","features/players/store/reducer.ts","features/players/store/selectors.ts","features/teams/store/selectors.ts","lib/options.ts","features/events/components/EventEditor/index.tsx","pages/Events/index.tsx","utils/commons.ts"],"sourcesContent":["import { PageHeader } from 'antd';\n\ntype Props = {\n  content: any;\n};\n\nconst Header = ({ content }: Props) => (\n  <PageHeader style={{ backgroundColor: 'white', marginBottom: 5, height: 64 }}>\n    {content}\n  </PageHeader>\n);\n\nexport default Header;\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { notification } from 'antd';\nimport _ from 'lodash';\nimport { all, put, select, takeEvery } from 'redux-saga/effects';\nimport { backendService } from 'services';\nimport formatError from 'utils/formatError';\n\nimport type { Event, Match } from '../types';\nimport { actions as matchAction } from './reducer';\nimport { selectMatch } from './selectors';\n\nfunction* getMatchs(action: PayloadAction<string>) {\n  try {\n    const league = action.payload;\n    const result: WithApiResult<Match[]> = yield backendService.post('api/getMatchs', { league });\n    if (result.kind === 'ok') {\n      if (result.data.length) {\n        const leagues = _.keyBy(result.data, 'id');\n        yield put(matchAction.fetchMatchs(leagues));\n      } else {\n        yield put(matchAction.fetchMatchs({}));\n      }\n    } else {\n      yield put(matchAction.fetchMatchs());\n      notification.error({\n        message: 'Lỗi tra cứu',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(matchAction.fetchMatchs());\n    notification.error({\n      message: 'Lỗi tra cứu',\n      description: formatError(error),\n    });\n  }\n}\n\nfunction* updateMatch(action: PayloadAction<Match>) {\n  try {\n    const data = action.payload;\n\n    const result: WithApiResult<string> = yield backendService.post('api/updateMatch', {\n      data,\n    });\n\n    if (result.kind === 'ok') {\n      yield put(matchAction.fetchMatchs({ [data.id]: data }));\n    } else {\n      yield put(matchAction.fetchMatchs({}));\n      notification.error({\n        message: 'Lỗi cập nhật',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(matchAction.fetchMatchs());\n    notification.error({\n      message: 'Lỗi cập nhập',\n      description: formatError(error),\n    });\n  }\n}\nfunction* getEvents(action: PayloadAction<string>) {\n  try {\n    const match = action.payload;\n    const result: WithApiResult<Event[]> = yield backendService.post('api/getEvents', { match });\n    if (result.kind === 'ok') {\n      if (result.data.length) {\n        const events = _.keyBy(result.data, 'id');\n        yield put(matchAction.fetchEvents({ match, data: events }));\n      } else {\n        yield put(matchAction.fetchMatchs({}));\n      }\n    } else {\n      yield put(matchAction.fetchMatchs());\n      notification.error({\n        message: 'Lỗi tra cứu',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(matchAction.fetchMatchs());\n    notification.error({\n      message: 'Lỗi tra cứu',\n      description: formatError(error),\n    });\n  }\n}\n\nfunction* updateEvent(action: PayloadAction<Event>) {\n  try {\n    const eventData = action.payload;\n\n    const result: WithApiResult<string> = yield backendService.post('api/updateEvent', {\n      data: eventData,\n    });\n\n    if (result.kind === 'ok') {\n      yield put(\n        matchAction.fetchEvents({ match: eventData.match, data: { [eventData.id]: eventData } })\n      );\n      if (eventData.name === 'goals') {\n        const match: Match = yield select((state) => selectMatch(state, eventData.match));\n        const dataUpdate: Match = _.cloneDeep(match);\n        if (eventData.detail.team === match.teamA) {\n          const oldResult = _.get(match, ['mathResult', 'teamA'], 0);\n          _.set(dataUpdate, ['mathResult', 'teamA'], oldResult + 1);\n        } else {\n          const oldResult = _.get(match, ['mathResult', 'teamB'], 0);\n          _.set(dataUpdate, ['mathResult', 'teamB'], oldResult + 1);\n        }\n        yield put(matchAction.updateMatch(dataUpdate));\n      }\n    } else {\n      yield put(matchAction.fetchMatchs());\n      notification.error({\n        message: 'Lỗi cập nhật',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(matchAction.fetchMatchs());\n    notification.error({\n      message: 'Lỗi cập nhập',\n      description: formatError(error),\n    });\n  }\n}\nexport default function* saga() {\n  yield all([\n    takeEvery(matchAction.getMatchs.type, getMatchs),\n    takeEvery(matchAction.getEvents.type, getEvents),\n    takeEvery(matchAction.updateMatch.type, updateMatch),\n    takeEvery(matchAction.updateEvent.type, updateEvent),\n  ]);\n}\n","import { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\n\nimport { actions, key, reducer } from './reducer';\nimport saga from './saga';\n\nexport const useMatchSlide = () => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({\n    key,\n    saga,\n  });\n  return { actions };\n};\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\n\nimport type { Event, Match, MatchStore } from '../types';\n\nexport const initialState: MatchStore = { handling: false };\n\nconst slice = createSlice({\n  name: 'matchStore',\n  initialState,\n  reducers: {\n    fetchMatchs(state, action: PayloadAction<CustomObject<Match> | undefined>) {\n      state.handling = false;\n      if (action.payload) {\n        state.matches = {\n          ...state.matches,\n          ...action.payload,\n        };\n      }\n    },\n    fetchEvents(state, action: PayloadAction<{ match: string; data: CustomObject<Event> }>) {\n      state.handling = false;\n      if (action.payload) {\n        const { match, data } = action.payload;\n        state.events = {\n          ...state.events,\n          [match]: {\n            ...state.events?.[match],\n            ...data,\n          },\n        };\n      }\n    },\n    getMatchs(state, _action: PayloadAction<string>) {\n      state.handling = true;\n    },\n    getEvents(state, _action: PayloadAction<string>) {\n      state.handling = true;\n    },\n    updateMatch(state, _action: PayloadAction<Match>) {\n      state.handling = true;\n    },\n    updateEvent(state, _action: PayloadAction<Event>) {\n      state.handling = true;\n    },\n  },\n});\n\nexport const { actions, name: key, reducer } = slice;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.matchStore || initialState;\nconst selectPath = (state: RootState, path: string) => path;\n\nexport const selectMatchHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectMatchs = createSelector([selectDomain], (state) => state.matches);\n\nexport const selectEvents = createSelector([selectDomain], (state) => state.events);\n\nexport const selectLeagueMatches = createSelector([selectMatchs, selectPath], (matches, league) => {\n  const result = Object.values(matches ?? {}).filter((match) => match.league === league);\n  return result;\n});\n\nexport const selectMatch = createSelector(\n  [selectMatchs, selectPath],\n  (matches, id) => matches?.[id]\n);\n\nexport const selectMatchEvents = createSelector(\n  [selectEvents, selectPath],\n  (events, match) => events?.[match]\n);\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { notification } from 'antd';\nimport _ from 'lodash';\nimport { all, put, select, takeEvery } from 'redux-saga/effects';\nimport { backendService } from 'services';\nimport formatError from 'utils/formatError';\n\nimport type { Player } from '../types';\nimport { actions as playersAction } from './reducer';\nimport { selectPlayersOfTeams } from './selectors';\n\nfunction* getPlayers(action: PayloadAction<string>) {\n  try {\n    const team = action.payload;\n    const result: WithApiResult<Player[]> = yield backendService.post('api/getPlayers', { team });\n    if (result.kind === 'ok') {\n      if (result.data.length) {\n        const players = _.keyBy(result.data, 'id');\n        yield put(playersAction.fetchPlayers({ team, players }));\n      } else {\n        yield put(playersAction.fetchPlayers());\n      }\n    } else {\n      yield put(playersAction.fetchPlayers());\n      notification.error({\n        message: 'Lỗi tra cứu',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(playersAction.fetchPlayers());\n    notification.error({\n      message: 'Lỗi tra cứu',\n      description: formatError(error),\n    });\n  }\n}\n\nfunction* updatePlayer(action: PayloadAction<Player>) {\n  try {\n    const playerData = action.payload;\n    const { team, id } = playerData;\n\n    const playersTeam: CustomObject<Player> = yield select((state) =>\n      selectPlayersOfTeams(state, team)\n    );\n    const result: WithApiResult<string> = yield backendService.post('api/updatePlayer', {\n      data: playerData,\n    });\n\n    if (result.kind === 'ok') {\n      const dataUpdate = _.cloneDeep(playersTeam);\n      _.set(dataUpdate, [id], playerData);\n\n      yield put(playersAction.fetchPlayers({ team, players: dataUpdate }));\n    } else {\n      yield put(playersAction.fetchPlayers());\n      notification.error({\n        message: 'Lỗi cập nhật',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(playersAction.fetchPlayers());\n    notification.error({\n      message: 'Lỗi cập nhập',\n      description: formatError(error),\n    });\n  }\n}\n\nexport default function* saga() {\n  yield all([\n    takeEvery(playersAction.getPlayers.type, getPlayers),\n    takeEvery(playersAction.updatePlayer.type, updatePlayer),\n  ]);\n}\n","import { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\n\nimport { actions, key, reducer } from './reducer';\nimport saga from './saga';\n\nexport const usePlayerSlide = () => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({\n    key,\n    saga,\n  });\n  return { actions };\n};\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\n\nimport type { Player, PlayersStore } from '../types';\n\nexport const initialState: PlayersStore = { handling: false };\n\nconst slice = createSlice({\n  name: 'playerStore',\n  initialState,\n  reducers: {\n    fetchPlayers(\n      state,\n      action: PayloadAction<{ team: string; players: CustomObject<Player> } | undefined>\n    ) {\n      state.handling = false;\n      if (action.payload) {\n        const { team, players } = action.payload;\n        state.data = {\n          ...state.data,\n          [team]: players,\n        };\n      }\n    },\n    getPlayers(state, _action: PayloadAction<string>) {\n      state.handling = true;\n    },\n    updatePlayer(state, _action: PayloadAction<Player>) {\n      state.handling = true;\n    },\n  },\n});\n\nexport const { actions, name: key, reducer } = slice;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.playerStore || initialState;\nconst selectPath = (state: RootState, path: string) => path;\n\nexport const selectPlayerHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectLayers = createSelector([selectDomain], (state) => state.data);\n\nexport const selectPlayersOfTeams = createSelector(\n  [selectLayers, selectPath],\n  (players, path) => players?.[path]\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.teamStore || initialState;\n\nexport const selectTeamHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectTeamData = createSelector([selectDomain], (state) => state.data);\n","import countryJson from './countries.json';\n\nexport const FONTS = ['Mynerve', 'Bangers', 'Fruktur', 'Gluten', 'Roboto', 'SedgwickAveDisplay'];\n\nexport const linearGradientColor = [\n  ['#E54D24', '#DDB249'],\n  ['#ED4264', '#FFEDBC'],\n  ['#6D53DC', '#DB8282'],\n  ['#539566', '#72A5C2'],\n  ['#8D60BE', '#F2D49E'],\n  ['#A446A4', '#83A5BE'],\n  ['#6D53DC', '#DC5356'],\n  ['#D9B967', '#8EC3A7'],\n  ['#F08686', '#9CC495'],\n];\n\nexport const playerRoles: CustomObject<string> = {\n  GK: 'Goalkeeper',\n  CB: 'Center back',\n  WB: 'Wing back',\n  CDM: 'Defensive Midfielder',\n  CM: 'Central Midfielder',\n  ST: 'Striker',\n  W: 'Winger',\n};\n\nexport const events: CustomObject<string> = {\n  shots: 'Shots',\n  goals: 'Goals',\n  offSide: 'Offside',\n  cornerKick: 'Corner Kick',\n  errors: 'Errors',\n  redCard: 'Red Card',\n  yellowCard: 'Yellow Card',\n};\n\nexport const countryOptions = countryJson.map(({ name, code }) => ({ label: name, value: code }));\n","import { Button, Col, Form, InputNumber, Modal, Row, Select } from 'antd';\nimport { useMatchSlide } from 'features/matches/store';\nimport type { Event } from 'features/matches/types';\nimport { selectPlayersOfTeams } from 'features/players/store/selectors';\nimport { events } from 'lib/options';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type { RootState } from 'types';\nimport { generateID } from 'utils/commons';\n\ntype Props = {\n  info: Partial<Event>;\n  teamsOptions: { label: string; value: string }[];\n  onCancel: () => void;\n};\n\nexport const EventEditor = ({ info, onCancel, teamsOptions }: Props) => {\n  const dispatch = useDispatch();\n  const { actions } = useMatchSlide();\n  const [form] = Form.useForm<Event>();\n  const [team, setTeam] = useState('');\n  const players = useSelector((state: RootState) => selectPlayersOfTeams(state, team));\n\n  const handleSave = async () => {\n    try {\n      const formData = await form.validateFields();\n      const dataUpdate = {\n        ...info,\n        ...formData,\n      };\n      if (!info.id) {\n        dataUpdate.id = generateID();\n      }\n      dispatch(actions.updateEvent(dataUpdate));\n      onCancel();\n    } catch (error) {}\n  };\n\n  return (\n    <Modal\n      open\n      title={`${!info.id ? 'Thêm' : 'Sửa'} sự kiện`}\n      onCancel={onCancel}\n      footer={[\n        <Button type=\"primary\" onClick={handleSave}>\n          Lưu\n        </Button>,\n      ]}\n    >\n      <Form form={form} initialValues={info} layout=\"vertical\">\n        <Row gutter={10}>\n          <Col span={12}>\n            <Form.Item name=\"name\" label=\"Tên sự kiện\" rules={[{ required: true }]}>\n              <Select\n                options={Object.entries(events).map(([id, name]) => ({ label: name, value: id }))}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={12}>\n            <Form.Item name=\"minute\" label=\"Phút thứ\" rules={[{ required: true }]}>\n              <InputNumber controls={false} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Form.Item name={['detail', 'team']} label=\"Đội\" rules={[{ required: true }]}>\n          <Select\n            options={teamsOptions}\n            onChange={(value: string) => {\n              setTeam(value);\n            }}\n          />\n        </Form.Item>\n        <Form.Item name={['detail', 'player']} label=\"Cầu thủ\">\n          <Select\n            options={Object.values(players ?? {}).map(({ id, name }) => ({\n              label: name,\n              value: id,\n            }))}\n          />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default EventEditor;\n","import { Button, Col, Layout, Row, Table, TableColumnType, Typography } from 'antd';\nimport { Header, Waiting } from 'components';\nimport { EventEditor } from 'features/events/components';\nimport { useMatchSlide } from 'features/matches/store';\nimport {\n  selectMatch,\n  selectMatchEvents,\n  selectMatchHandling,\n} from 'features/matches/store/selectors';\nimport type { Event } from 'features/matches/types';\nimport { usePlayerSlide } from 'features/players/store';\nimport { selectPlayerHandling, selectPlayersOfTeams } from 'features/players/store/selectors';\nimport { selectTeamData } from 'features/teams/store/selectors';\nimport { events } from 'lib/options';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport type { RootState } from 'types';\n\nconst Events = () => {\n  const dispatch = useDispatch();\n  const { actions } = useMatchSlide();\n  const { actions: playerAction } = usePlayerSlide();\n  const { match: matchID } = useParams();\n\n  const match = useSelector((state: RootState) => selectMatch(state, matchID || ''));\n  const handling = useSelector(selectMatchHandling);\n  const waiting = useSelector(selectPlayerHandling);\n  const matchEvents = useSelector((state: RootState) => selectMatchEvents(state, matchID || ''));\n  const { teamA, teamB, mathResult } = match ?? {};\n  const teams = useSelector(selectTeamData);\n  const teamAPlayers = useSelector((state: RootState) => selectPlayersOfTeams(state, teamA || ''));\n  const teamBPlayers = useSelector((state: RootState) => selectPlayersOfTeams(state, teamB || ''));\n\n  useEffect(() => {\n    if (!matchEvents && matchID) {\n      dispatch(actions.getEvents(matchID));\n    }\n    if (!teamAPlayers) {\n      dispatch(playerAction.getPlayers(teamA || ''));\n    }\n    if (!teamBPlayers) {\n      dispatch(playerAction.getPlayers(teamB || ''));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [edit, setEdit] = useState<Partial<Event>>();\n\n  const columns: TableColumnType<Event>[] = useMemo(\n    () => [\n      {\n        title: 'STT',\n        align: 'center',\n        width: 70,\n        render: (_a, _b, index) => index + 1,\n      },\n      {\n        title: 'Sự kiện',\n        dataIndex: 'name',\n        align: 'center',\n        render: (value: string) => events[value],\n      },\n      {\n        title: 'Thời gian',\n        width: 200,\n        align: 'center',\n        dataIndex: 'minute',\n        render: (value) => `Phút thứ ${value}`,\n      },\n      {\n        title: 'Đội',\n        align: 'center',\n        dataIndex: 'detail',\n        render: (_any, record) => teams?.[record.detail.team]?.name,\n      },\n      {\n        title: 'Thành viên',\n        align: 'center',\n        dataIndex: 'detail',\n        render: (_any, record) => {\n          const players = record.detail.team === match?.teamA ? teamAPlayers : teamBPlayers;\n          return players?.[record.detail.player || '']?.name;\n        },\n      },\n    ],\n    [match, teamAPlayers, teamBPlayers, teams]\n  );\n  return (\n    <div>\n      {handling || waiting ? <Waiting /> : null}\n      {edit ? (\n        <EventEditor\n          info={edit}\n          teamsOptions={[\n            {\n              label: teams?.[teamA || '']?.name || '',\n              value: teamA || '',\n            },\n            {\n              label: teams?.[teamB || '']?.name || '',\n              value: teamB || '',\n            },\n          ]}\n          onCancel={() => setEdit(undefined)}\n        />\n      ) : null}\n      <Header\n        content={\n          <div>\n            <Row justify=\"center\">\n              <Typography.Title level={4}>Diễn biến trận đấu</Typography.Title>\n              <Button\n                type=\"primary\"\n                style={{ position: 'absolute', right: 10 }}\n                onClick={() => setEdit({ match: matchID })}\n              >\n                Thêm sự kiện\n              </Button>\n            </Row>\n          </div>\n        }\n      />\n      <Layout\n        style={{ backgroundColor: 'white', height: window.innerHeight - 100, textAlign: 'center' }}\n      >\n        <Row\n          justify=\"space-between\"\n          align=\"middle\"\n          gutter={12}\n          style={{ paddingTop: 10, height: 130 }}\n        >\n          <Col span={11}>\n            <img src={teams?.[teamA!]?.logo} alt=\"\" style={{ width: 80, borderRadius: 48 }} />\n            <Typography.Title level={5} style={{ marginTop: 10 }}>\n              {teams?.[teamA!]?.name}\n            </Typography.Title>\n          </Col>\n          <Col span={2}>\n            <Typography.Title level={1}>\n              {`${mathResult?.teamA || 0} - ${mathResult?.teamB || 0}`}\n            </Typography.Title>\n          </Col>\n          <Col span={11}>\n            <img src={teams?.[teamB!]?.logo} alt=\"\" style={{ width: 70, borderRadius: 48 }} />\n            <Typography.Title level={5} style={{ marginTop: 10 }}>\n              {teams?.[teamB!]?.name}\n            </Typography.Title>\n          </Col>\n        </Row>\n\n        <Table\n          columns={columns}\n          dataSource={Object.values(matchEvents ?? {})}\n          scroll={{ y: window.innerHeight - 250 }}\n        />\n      </Layout>\n    </div>\n  );\n};\n\nexport default Events;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\n\nexport const getYearOptions = () => {\n  const currentYear = moment().year();\n  return _.range(currentYear - 10, currentYear + 10).map((year) => ({\n    label: `Năm ${year}`,\n    value: year,\n  }));\n};\n\nexport const generateID = (\n  ids: string[] = [],\n  size = 10,\n  options: { prefix?: string; suffix?: string } = {}\n): string => {\n  const id = `${options.prefix ?? ''}${nanoid(size)}${options.suffix ?? ''}`;\n  if (ids.includes(id)) return generateID(ids, size, options);\n  return id;\n};\n\nexport const parseFullName = (fullName: string) => {\n  const words = _.split(fullName, ' ');\n  return {\n    firstName: _.join(_.dropRight(words), ' '),\n    lastName: _.last(words),\n  };\n};\n"],"names":["_ref","content","_jsx","PageHeader","style","backgroundColor","marginBottom","height","children","getMatchs","action","league","payload","result","backendService","post","kind","data","length","leagues","_","put","matchAction","fetchMatchs","notification","error","message","description","formatError","updateMatch","id","getEvents","match","events","fetchEvents","updateEvent","eventData","name","select","state","selectMatch","dataUpdate","detail","team","teamA","oldResult","saga","all","takeEvery","type","useMatchSlide","useInjectReducer","key","reducer","useInjectSaga","actions","initialState","handling","slice","createSlice","reducers","matches","_state$events","_action","selectDomain","matchStore","selectPath","path","selectMatchHandling","createSelector","selectMatchs","selectEvents","selectLeagueMatches","Object","values","filter","selectMatchEvents","getPlayers","players","playersAction","fetchPlayers","updatePlayer","playerData","playersTeam","selectPlayersOfTeams","usePlayerSlide","playerStore","selectPlayerHandling","selectLayers","teamStore","selectTeamHandling","selectTeamData","linearGradientColor","playerRoles","GK","CB","WB","CDM","CM","ST","W","shots","goals","offSide","cornerKick","errors","redCard","yellowCard","countryOptions","countryJson","map","code","label","value","info","onCancel","teamsOptions","dispatch","useDispatch","form","Form","useForm","setTeam","useState","useSelector","Modal","open","title","concat","footer","Button","onClick","async","formData","validateFields","generateID","_jsxs","initialValues","layout","Row","gutter","Col","span","Item","rules","required","Select","options","entries","_ref2","InputNumber","controls","onChange","_ref3","Events","_teams","_teams2","_teams3","_teams4","_teams5","_teams6","playerAction","matchID","useParams","waiting","matchEvents","teamB","mathResult","teams","teamAPlayers","teamBPlayers","useEffect","edit","setEdit","columns","useMemo","align","width","render","_a","_b","index","dataIndex","_any","record","_teams$record$detail$","_players","player","Waiting","EventEditor","undefined","Header","justify","Typography","Title","level","position","right","Layout","window","innerHeight","textAlign","paddingTop","src","logo","alt","borderRadius","marginTop","Table","dataSource","scroll","y","_options$prefix","_options$suffix","ids","arguments","size","prefix","nanoid","suffix","includes"],"sourceRoot":""}