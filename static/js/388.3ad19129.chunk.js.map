{"version":3,"file":"static/js/388.3ad19129.chunk.js","mappings":"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","sources":["components/Header/index.tsx","features/players/store/reducer.ts","features/players/store/selectors.ts","features/teams/store/selectors.ts","lib/options.ts","../node_modules/@ant-design/icons-svg/es/asn/TeamOutlined.js","../node_modules/@ant-design/icons/es/icons/TeamOutlined.js","features/teams/components/ListTeams/TeamEditor.tsx","features/teams/components/ListTeams/index.tsx","pages/Teams/index.tsx","utils/commons.ts","utils/image.ts"],"sourcesContent":["import { PageHeader } from 'antd';\n\ntype Props = {\n  content: any;\n};\n\nconst Header = ({ content }: Props) => (\n  <PageHeader style={{ backgroundColor: 'white', marginBottom: 5, height: 64 }}>\n    {content}\n  </PageHeader>\n);\n\nexport default Header;\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\n\nimport type { Player, PlayersStore } from '../types';\n\nexport const initialState: PlayersStore = { handling: false };\n\nconst slice = createSlice({\n  name: 'playerStore',\n  initialState,\n  reducers: {\n    fetchPlayers(\n      state,\n      action: PayloadAction<{ team: string; players: CustomObject<Player> } | undefined>\n    ) {\n      state.handling = false;\n      if (action.payload) {\n        const { team, players } = action.payload;\n        state.data = {\n          ...state.data,\n          [team]: players,\n        };\n      }\n    },\n    getPlayers(state, _action: PayloadAction<string>) {\n      state.handling = true;\n    },\n    updatePlayer(state, _action: PayloadAction<Player>) {\n      state.handling = true;\n    },\n  },\n});\n\nexport const { actions, name: key, reducer } = slice;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.playerStore || initialState;\nconst selectPath = (state: RootState, path: string) => path;\n\nexport const selectPlayerHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectLayers = createSelector([selectDomain], (state) => state.data);\n\nexport const selectPlayersOfTeams = createSelector(\n  [selectLayers, selectPath],\n  (players, path) => players?.[path]\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.teamStore || initialState;\n\nexport const selectTeamHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectTeamData = createSelector([selectDomain], (state) => state.data);\n","import countryJson from './countries.json';\n\nexport const FONTS = ['Mynerve', 'Bangers', 'Fruktur', 'Gluten', 'Roboto', 'SedgwickAveDisplay'];\n\nexport const linearGradientColor = [\n  ['#E54D24', '#DDB249'],\n  ['#ED4264', '#FFEDBC'],\n  ['#6D53DC', '#DB8282'],\n  ['#539566', '#72A5C2'],\n  ['#8D60BE', '#F2D49E'],\n  ['#A446A4', '#83A5BE'],\n  ['#6D53DC', '#DC5356'],\n  ['#D9B967', '#8EC3A7'],\n  ['#F08686', '#9CC495'],\n];\n\nexport const playerRoles: CustomObject<string> = {\n  GK: 'Goalkeeper',\n  CB: 'Center back',\n  WB: 'Wing back',\n  CDM: 'Defensive Midfielder',\n  CM: 'Central Midfielder',\n  ST: 'Striker',\n  W: 'Winger',\n};\n\nexport const events: CustomObject<string> = {\n  shots: 'Shots',\n  goals: 'Goals',\n  offSide: 'Offside',\n  cornerKick: 'Corner Kick',\n  errors: 'Errors',\n  redCard: 'Red Card',\n  yellowCard: 'Yellow Card',\n};\n\nexport const countryOptions = countryJson.map(({ name, code }) => ({ label: name, value: code }));\n","// This icon file is generated automatically.\nvar TeamOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M824.2 699.9a301.55 301.55 0 00-86.4-60.4C783.1 602.8 812 546.8 812 484c0-110.8-92.4-201.7-203.2-200-109.1 1.7-197 90.6-197 200 0 62.8 29 118.8 74.2 155.5a300.95 300.95 0 00-86.4 60.4C345 754.6 314 826.8 312 903.8a8 8 0 008 8.2h56c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5A226.62 226.62 0 01612 684c60.9 0 118.2 23.7 161.3 66.8C814.5 792 838 846.3 840 904.3c.1 4.3 3.7 7.7 8 7.7h56a8 8 0 008-8.2c-2-77-33-149.2-87.8-203.9zM612 612c-34.2 0-66.4-13.3-90.5-37.5a126.86 126.86 0 01-37.5-91.8c.3-32.8 13.4-64.5 36.3-88 24-24.6 56.1-38.3 90.4-38.7 33.9-.3 66.8 12.9 91 36.6 24.8 24.3 38.4 56.8 38.4 91.4 0 34.2-13.3 66.3-37.5 90.5A127.3 127.3 0 01612 612zM361.5 510.4c-.9-8.7-1.4-17.5-1.4-26.4 0-15.9 1.5-31.4 4.3-46.5.7-3.6-1.2-7.3-4.5-8.8-13.6-6.1-26.1-14.5-36.9-25.1a127.54 127.54 0 01-38.7-95.4c.9-32.1 13.8-62.6 36.3-85.6 24.7-25.3 57.9-39.1 93.2-38.7 31.9.3 62.7 12.6 86 34.4 7.9 7.4 14.7 15.6 20.4 24.4 2 3.1 5.9 4.4 9.3 3.2 17.6-6.1 36.2-10.4 55.3-12.4 5.6-.6 8.8-6.6 6.3-11.6-32.5-64.3-98.9-108.7-175.7-109.9-110.9-1.7-203.3 89.2-203.3 199.9 0 62.8 28.9 118.8 74.2 155.5-31.8 14.7-61.1 35-86.5 60.4-54.8 54.7-85.8 126.9-87.8 204a8 8 0 008 8.2h56.1c4.3 0 7.9-3.4 8-7.7 1.9-58 25.4-112.3 66.7-153.5 29.4-29.4 65.4-49.8 104.7-59.7 3.9-1 6.5-4.7 6-8.7z\" } }] }, \"name\": \"team\", \"theme\": \"outlined\" };\nexport default TeamOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport TeamOutlinedSvg from \"@ant-design/icons-svg/es/asn/TeamOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar TeamOutlined = function TeamOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: TeamOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  TeamOutlined.displayName = 'TeamOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(TeamOutlined);","import { Button, Col, DatePicker, Form, Input, Modal, Row, Select, Upload } from 'antd';\nimport type { RcFile } from 'antd/lib/upload';\nimport { selectPlayersOfTeams } from 'features/players/store/selectors';\nimport { useTeamSlide } from 'features/teams/store';\nimport type { Team } from 'features/teams/types';\nimport { countryOptions } from 'lib/options';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport type { RootState } from 'types';\nimport { generateID } from 'utils/commons';\nimport { getBase64 } from 'utils/image';\n\ntype Props = {\n  info: Partial<Team>;\n  onClose: () => void;\n};\n\nexport const TeamEditor = ({ info, onClose }: Props) => {\n  const dispatch = useDispatch();\n  const { actions } = useTeamSlide();\n  const [form] = Form.useForm<Team>();\n\n  const teamMembers = useSelector((state: RootState) => selectPlayersOfTeams(state, info.id ?? ''));\n\n  const [image, setImage] = useState<string>(info.logo || '');\n  const [background, setBackground] = useState<string>(info.background || '');\n  const handlerUpload = async (file: RcFile, type: string) => {\n    const base64 = await getBase64(file);\n    if (type === 'logo') {\n      setImage(base64);\n    } else {\n      setBackground(base64);\n    }\n  };\n\n  const handleSave = async () => {\n    try {\n      const formData = await form.validateFields();\n      if (!image) {\n        Modal.warn({ title: 'Thiếu thông tin', content: 'Vui lòng chọn logo' });\n        return;\n      }\n\n      if (formData.founding) {\n        formData.founding = formData.founding.valueOf();\n      }\n      const dataUpdate: Team = {\n        ...info,\n        ...formData,\n        logo: image!,\n        background,\n      };\n\n      if (!dataUpdate.id) {\n        dataUpdate.id = generateID();\n      }\n\n      dispatch(actions.updateTeam(dataUpdate));\n      onClose();\n    } catch {}\n  };\n\n  return (\n    <Modal\n      open\n      title={`${info.id ? 'Sửa' : 'Thêm'} đội bóng`}\n      onCancel={onClose}\n      footer={[\n        <Button type=\"primary\" onClick={handleSave}>\n          Lưu\n        </Button>,\n      ]}\n    >\n      <Row gutter={[5, 10]}>\n        <Col span={24}>\n          <Upload.Dragger\n            name=\"file\"\n            height={200}\n            accept=\"image/*\"\n            listType=\"picture\"\n            showUploadList={false}\n            beforeUpload={(file) => handlerUpload(file, 'background')}\n          >\n            {background ? (\n              <img\n                src={background}\n                alt=\"avatar\"\n                style={{ width: '100%', height: 170, objectFit: 'cover' }}\n              />\n            ) : (\n              <div>Thêm Background</div>\n            )}\n          </Upload.Dragger>\n        </Col>\n        <Col span={6}>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            accept=\"image/*\"\n            showUploadList={false}\n            beforeUpload={(file) => handlerUpload(file, 'logo')}\n          >\n            {image ? (\n              <img src={image} alt=\"avatar\" style={{ width: '100%' }} />\n            ) : (\n              <div>Thêm logo</div>\n            )}\n          </Upload>\n        </Col>\n        <Col span={18}>\n          <Form form={form} layout=\"vertical\" initialValues={info ?? {}}>\n            <Form.Item name=\"name\" label=\"Tên đội bóng\" rules={[{ required: true }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"coach\" label=\"Huấn luyện viên\" rules={[{ required: true }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"founding\" label=\"Ngày thành lập\" rules={[{ required: true }]}>\n              <DatePicker style={{ width: '100%' }} format=\"D/M/Y\" />\n            </Form.Item>\n            <Form.Item name=\"country\" label=\"Quốc gia\" rules={[{ required: true }]}>\n              <Select options={countryOptions} />\n            </Form.Item>\n            <Form.Item name=\"captain\" label=\"Đội trưởng\">\n              <Select\n                options={Object.values(teamMembers ?? {}).map(({ name, id }) => ({\n                  value: id,\n                  label: name,\n                }))}\n              />\n            </Form.Item>\n            <Form.Item name=\"description\" label=\"Mô tả\" rules={[{ required: true }]}>\n              <Input.TextArea />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </Modal>\n  );\n};\n","import { EditOutlined, TeamOutlined } from '@ant-design/icons';\nimport { Button, Col, Popover, Row, Table, TableColumnType } from 'antd';\nimport { Waiting } from 'components';\nimport { useTeamSlide } from 'features/teams/store';\nimport { selectTeamData, selectTeamHandling } from 'features/teams/store/selectors';\nimport type { Team } from 'features/teams/types';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { TeamEditor } from './TeamEditor';\n\nconst ListTeams = () => {\n  const dispatch = useDispatch();\n  const { actions } = useTeamSlide();\n  const navigate = useNavigate();\n\n  const teamsData = useSelector(selectTeamData);\n  const handling = useSelector(selectTeamHandling);\n  const [edit, setEdit] = useState<Partial<Team>>();\n\n  useEffect(() => {\n    if (!teamsData) {\n      dispatch(actions.getTeams());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actions, dispatch]);\n\n  const columns: TableColumnType<Team>[] = useMemo(\n    () => [\n      {\n        title: 'STT',\n        width: 50,\n        render: (_any, _record, index) => index + 1,\n      },\n      {\n        title: 'Tên đội bóng',\n        dataIndex: 'name',\n        render: (_any, record) => (\n          <Row align=\"middle\" gutter={5}>\n            <Col>\n              <img\n                style={{ borderRadius: 48, objectFit: 'cover' }}\n                width={40}\n                src={record.logo}\n                alt=\"\"\n              />\n            </Col>\n            <Col>\n              <b>{record.name}</b>\n            </Col>\n          </Row>\n        ),\n      },\n      {\n        title: 'Huấn luyện viên',\n        dataIndex: 'coach',\n      },\n      {\n        render: (_any, record) => (\n          <Row gutter={20}>\n            <Col>\n              <Popover content=\"Danh sách thành viên\">\n                <TeamOutlined onClick={() => navigate(`/players/${record.id}`)} />\n              </Popover>\n            </Col>\n            <Col>\n              <Popover content=\"Sửa thông tin đội bóng\">\n                <EditOutlined onClick={() => setEdit(record)} />\n              </Popover>\n            </Col>\n          </Row>\n        ),\n      },\n    ],\n    [navigate]\n  );\n  return (\n    <div>\n      {handling ? <Waiting /> : null}\n      {edit ? <TeamEditor info={edit} onClose={() => setEdit(undefined)} /> : null}\n      <Row justify=\"end\" gutter={[5, 5]}>\n        <Col>\n          <Button style={{ margin: '10px 10px' }} type=\"primary\" onClick={() => setEdit({})}>\n            Thêm đội bóng\n          </Button>\n        </Col>\n      </Row>\n      <Table columns={columns} pagination={false} dataSource={Object.values(teamsData ?? {})} />\n    </div>\n  );\n};\n\nexport default ListTeams;\n","import { Col, Layout, Typography } from 'antd';\nimport { Header } from 'components';\nimport { ListTeams } from 'features/teams/components';\n\nconst Teams = () => (\n  // const dispatch = useDispatch();\n  // const { actions } = useTeamSlide();\n  // const [form] = Form.useForm<{ year: number }>();\n\n  // const handleQuery = useCallback(async () => {\n  //   const data = await form.validateFields();\n\n  //   dispatch(actions.getTeams(data));\n  // }, [dispatch, actions, form]);\n  <div>\n    <Header\n      content={\n        <Col>\n          <Typography.Title level={4}>Danh sách đội bóng</Typography.Title>\n        </Col>\n      }\n    />\n    <Layout style={{ background: 'white', overflowY: 'scroll', height: window.innerHeight - 100 }}>\n      <ListTeams />\n    </Layout>\n  </div>\n);\nexport default Teams;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\n\nexport const getYearOptions = () => {\n  const currentYear = moment().year();\n  return _.range(currentYear - 10, currentYear + 10).map((year) => ({\n    label: `Năm ${year}`,\n    value: year,\n  }));\n};\n\nexport const generateID = (\n  ids: string[] = [],\n  size = 10,\n  options: { prefix?: string; suffix?: string } = {}\n): string => {\n  const id = `${options.prefix ?? ''}${nanoid(size)}${options.suffix ?? ''}`;\n  if (ids.includes(id)) return generateID(ids, size, options);\n  return id;\n};\n\nexport const parseFullName = (fullName: string) => {\n  const words = _.split(fullName, ' ');\n  return {\n    firstName: _.join(_.dropRight(words), ' '),\n    lastName: _.last(words),\n  };\n};\n","import type { RcFile } from 'antd/lib/upload';\n\nexport const getBase64 = (file: RcFile): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve((reader.result as string).toString());\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const getUrlImageBase64 = (base64: string) => `data:image/jpeg;base64,${base64}`;\n"],"names":["_ref","content","_jsx","PageHeader","style","backgroundColor","marginBottom","height","children","initialState","handling","slice","createSlice","name","reducers","fetchPlayers","state","action","payload","team","players","data","getPlayers","_action","updatePlayer","actions","key","reducer","selectDomain","playerStore","selectPlayerHandling","createSelector","selectLayers","selectPlayersOfTeams","selectPath","path","teamStore","selectTeamHandling","selectTeamData","linearGradientColor","playerRoles","GK","CB","WB","CDM","CM","ST","W","events","shots","goals","offSide","cornerKick","errors","redCard","yellowCard","countryOptions","countryJson","map","code","label","value","TeamOutlined","props","ref","React","AntdIcon","_extends","icon","TeamOutlinedSvg","TeamEditor","info","onClose","dispatch","useDispatch","useTeamSlide","form","Form","useForm","teamMembers","useSelector","_info$id","id","image","setImage","useState","logo","background","setBackground","handlerUpload","async","file","type","base64","getBase64","Modal","open","title","concat","onCancel","footer","Button","onClick","formData","validateFields","warn","founding","valueOf","dataUpdate","generateID","updateTeam","_jsxs","Row","gutter","Col","span","Upload","Dragger","accept","listType","showUploadList","beforeUpload","src","alt","width","objectFit","layout","initialValues","Item","rules","required","Input","DatePicker","format","Select","options","Object","values","_ref2","TextArea","ListTeams","navigate","useNavigate","teamsData","edit","setEdit","useEffect","getTeams","columns","useMemo","render","_any","_record","index","dataIndex","record","align","borderRadius","Popover","EditOutlined","Waiting","undefined","justify","margin","Table","pagination","dataSource","Teams","Header","Typography","Title","level","Layout","overflowY","window","innerHeight","_options$prefix","_options$suffix","ids","arguments","length","size","prefix","nanoid","suffix","includes","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","toString","onerror","error"],"sourceRoot":""}