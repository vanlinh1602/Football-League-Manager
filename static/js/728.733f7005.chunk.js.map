{"version":3,"file":"static/js/728.733f7005.chunk.js","mappings":"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","sources":["components/Header/index.tsx","features/players/store/saga.ts","features/players/store/index.ts","features/players/store/reducer.ts","features/players/store/selectors.ts","features/teams/store/selectors.ts","lib/options.ts","features/players/components/PlayerCard/index.tsx","features/players/components/PlayerEditor/index.tsx","pages/Players/index.tsx","utils/commons.ts","utils/image.ts"],"sourcesContent":["import { PageHeader } from 'antd';\n\ntype Props = {\n  content: any;\n};\n\nconst Header = ({ content }: Props) => (\n  <PageHeader style={{ backgroundColor: 'white', marginBottom: 5, height: 64 }}>\n    {content}\n  </PageHeader>\n);\n\nexport default Header;\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { notification } from 'antd';\nimport _ from 'lodash';\nimport { all, put, select, takeEvery } from 'redux-saga/effects';\nimport { backendService } from 'services';\nimport formatError from 'utils/formatError';\n\nimport type { Player } from '../types';\nimport { actions as playersAction } from './reducer';\nimport { selectPlayersOfTeams } from './selectors';\n\nfunction* getPlayers(action: PayloadAction<string>) {\n  try {\n    const team = action.payload;\n    const result: WithApiResult<Player[]> = yield backendService.post('api/getPlayers', { team });\n    if (result.kind === 'ok') {\n      if (result.data.length) {\n        const players = _.keyBy(result.data, 'id');\n        yield put(playersAction.fetchPlayers({ team, players }));\n      } else {\n        yield put(playersAction.fetchPlayers());\n      }\n    } else {\n      yield put(playersAction.fetchPlayers());\n      notification.error({\n        message: 'Lỗi tra cứu',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(playersAction.fetchPlayers());\n    notification.error({\n      message: 'Lỗi tra cứu',\n      description: formatError(error),\n    });\n  }\n}\n\nfunction* updatePlayer(action: PayloadAction<Player>) {\n  try {\n    const playerData = action.payload;\n    const { team, id } = playerData;\n\n    const playersTeam: CustomObject<Player> = yield select((state) =>\n      selectPlayersOfTeams(state, team)\n    );\n    const result: WithApiResult<string> = yield backendService.post('api/updatePlayer', {\n      data: playerData,\n    });\n\n    if (result.kind === 'ok') {\n      const dataUpdate = _.cloneDeep(playersTeam);\n      _.set(dataUpdate, [id], playerData);\n\n      yield put(playersAction.fetchPlayers({ team, players: dataUpdate }));\n    } else {\n      yield put(playersAction.fetchPlayers());\n      notification.error({\n        message: 'Lỗi cập nhật',\n        description: formatError(result),\n      });\n    }\n  } catch (error) {\n    yield put(playersAction.fetchPlayers());\n    notification.error({\n      message: 'Lỗi cập nhập',\n      description: formatError(error),\n    });\n  }\n}\n\nexport default function* saga() {\n  yield all([\n    takeEvery(playersAction.getPlayers.type, getPlayers),\n    takeEvery(playersAction.updatePlayer.type, updatePlayer),\n  ]);\n}\n","import { useInjectReducer, useInjectSaga } from 'utils/redux-injectors';\n\nimport { actions, key, reducer } from './reducer';\nimport saga from './saga';\n\nexport const usePlayerSlide = () => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({\n    key,\n    saga,\n  });\n  return { actions };\n};\n","import type { PayloadAction } from '@reduxjs/toolkit';\nimport { createSlice } from 'utils/@reduxjs/toolkit';\n\nimport type { Player, PlayersStore } from '../types';\n\nexport const initialState: PlayersStore = { handling: false };\n\nconst slice = createSlice({\n  name: 'playerStore',\n  initialState,\n  reducers: {\n    fetchPlayers(\n      state,\n      action: PayloadAction<{ team: string; players: CustomObject<Player> } | undefined>\n    ) {\n      state.handling = false;\n      if (action.payload) {\n        const { team, players } = action.payload;\n        state.data = {\n          ...state.data,\n          [team]: players,\n        };\n      }\n    },\n    getPlayers(state, _action: PayloadAction<string>) {\n      state.handling = true;\n    },\n    updatePlayer(state, _action: PayloadAction<Player>) {\n      state.handling = true;\n    },\n  },\n});\n\nexport const { actions, name: key, reducer } = slice;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.playerStore || initialState;\nconst selectPath = (state: RootState, path: string) => path;\n\nexport const selectPlayerHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectLayers = createSelector([selectDomain], (state) => state.data);\n\nexport const selectPlayersOfTeams = createSelector(\n  [selectLayers, selectPath],\n  (players, path) => players?.[path]\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.teamStore || initialState;\n\nexport const selectTeamHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectTeamData = createSelector([selectDomain], (state) => state.data);\n","export const FONTS = ['Mynerve', 'Bangers', 'Fruktur', 'Gluten', 'Roboto', 'SedgwickAveDisplay'];\n\nexport const linearGradientColor = [\n  ['#E54D24', '#DDB249'],\n  ['#ED4264', '#FFEDBC'],\n  ['#6D53DC', '#DB8282'],\n  ['#539566', '#72A5C2'],\n  ['#8D60BE', '#F2D49E'],\n  ['#A446A4', '#83A5BE'],\n  ['#6D53DC', '#DC5356'],\n  ['#D9B967', '#8EC3A7'],\n  ['#F08686', '#9CC495'],\n];\n\nexport const playerRoles: CustomObject<string> = {\n  GK: 'Thủ môn',\n  DF: 'Hậu vệ',\n  CB: 'Trung vệ',\n  FB: 'Hậu vệ biên',\n  DM: 'Tiền vệ phòng ngự',\n  CM: 'Tiền vệ trung tâm',\n  FW: 'Tiền đạo',\n  winger: 'Tiền vệ/Tiền đạo cánh',\n};\n\nexport const events: CustomObject<string> = {\n  shots: 'Sút',\n  goals: 'Ghi bàn',\n  offSide: 'Việt vị',\n  cornerKick: 'Phạt góc',\n  errors: 'Phạm lỗi',\n  redCard: 'Thẻ đỏ',\n  yellowCard: 'Thẻ vàng',\n};\n","import { EditOutlined } from '@ant-design/icons';\nimport { Card, Col, Popover, Row, Typography } from 'antd';\nimport type { Player } from 'features/players/types';\nimport { linearGradientColor, playerRoles } from 'lib/options';\nimport _ from 'lodash';\nimport moment from 'moment';\n\ntype Props = {\n  info: Player;\n  handleEdit: () => void;\n};\n\nconst PlayerCard = ({ info, handleEdit }: Props) => {\n  const linearColor = linearGradientColor[_.random(0, linearGradientColor.length - 1)];\n  const { name, avatar, birthday, role } = info;\n\n  return (\n    <Card\n      style={{\n        width: '90%',\n        margin: '20px',\n        borderRadius: '20px',\n        backgroundImage: `linear-gradient(to bottom right, ${linearColor[0]}, ${linearColor[1]})`,\n        overflow: 'hidden',\n      }}\n      bodyStyle={{ borderRadius: 12 }}\n      cover={\n        <img\n          alt=\"\"\n          src={avatar}\n          style={{\n            height: 200,\n            objectFit: 'cover',\n          }}\n        />\n      }\n      actions={[\n        <Popover content=\"Chỉnh sửa thông tin\">\n          <EditOutlined key=\"edit\" onClick={handleEdit} />,\n        </Popover>,\n      ]}\n    >\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          textAlign: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Col style={{ marginBottom: 5 }}>\n          <Typography style={{ fontWeight: 'bold', fontSize: 24, color: 'white' }}>\n            {name}\n          </Typography>\n        </Col>\n        <Row justify=\"space-between\" style={{ width: '100%', textAlign: 'center' }}>\n          <Col>\n            <Typography>Age</Typography>\n            <Typography style={{ fontWeight: 'bold' }}>\n              {moment().year() - moment(birthday).year()}\n            </Typography>\n          </Col>\n          <Col style={{ paddingLeft: 15 }}>\n            <Typography>Position</Typography>\n            <Typography style={{ fontWeight: 'bold' }}>{playerRoles[role]}</Typography>\n          </Col>\n          <Col>\n            <Typography>Contry</Typography>\n            <Typography style={{ fontWeight: 'bold' }}>VN</Typography>\n          </Col>\n        </Row>\n      </div>\n    </Card>\n  );\n};\n\nexport default PlayerCard;\n","import { Button, Col, DatePicker, Form, Input, Modal, Row, Select, Upload } from 'antd';\nimport type { RcFile } from 'antd/lib/upload';\nimport { usePlayerSlide } from 'features/players/store';\nimport type { Player } from 'features/players/types';\nimport { playerRoles } from 'lib/options';\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { generateID } from 'utils/commons';\nimport { getBase64 } from 'utils/image';\n\ntype Props = {\n  info: Partial<Player>;\n  onClose: () => void;\n};\n\nconst PlayerEditor = ({ info, onClose }: Props) => {\n  const dispatch = useDispatch();\n  const { actions } = usePlayerSlide();\n  const [form] = Form.useForm<Player>();\n  const [image, setImage] = useState<string>(info.avatar || '');\n  const handlerUpload = async (file: RcFile) => {\n    const base64 = await getBase64(file);\n    setImage(base64);\n  };\n\n  const handleSave = async () => {\n    try {\n      const formData = await form.validateFields();\n      if (!image) {\n        Modal.warn({ title: 'Thiếu thông tin', content: 'Vui lòng chọn hình ảnh' });\n        return;\n      }\n\n      if (formData.birthday) {\n        formData.birthday = formData.birthday.valueOf();\n      }\n\n      const dataUpdate: Player = {\n        ...info,\n        ...formData,\n        avatar: image,\n      };\n\n      if (!dataUpdate.id) {\n        dataUpdate.id = generateID();\n      }\n\n      dispatch(actions.updatePlayer(dataUpdate));\n      onClose();\n    } catch {}\n  };\n\n  return (\n    <Modal\n      width={700}\n      open\n      title={`${info.id ? 'Sửa' : 'Thêm'} cầu thủ`}\n      onCancel={onClose}\n      footer={[\n        <Button type=\"primary\" onClick={handleSave}>\n          Lưu\n        </Button>,\n      ]}\n    >\n      <Form\n        form={form}\n        layout=\"vertical\"\n        initialValues={{ ...info, birthday: info.birthday ? moment(info.birthday) : '' } ?? {}}\n      >\n        <Row gutter={10}>\n          <Col span={8}>\n            <Upload.Dragger\n              name=\"file\"\n              accept=\"image/*\"\n              height={240}\n              listType=\"picture\"\n              showUploadList={false}\n              beforeUpload={handlerUpload}\n            >\n              {image ? (\n                <img src={image} alt=\"avatar\" style={{ width: '100%' }} />\n              ) : (\n                <div>Thêm hình ảnh</div>\n              )}\n            </Upload.Dragger>\n          </Col>\n          <Col span={16}>\n            <Form.Item name=\"name\" label=\"Tên\" rules={[{ required: true }]}>\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"birthday\" label=\"Ngày sinh\">\n              <DatePicker style={{ width: '100%' }} format=\"D/M/Y\" />\n            </Form.Item>\n            <Form.Item name=\"role\" label=\"Vai trò\" rules={[{ required: true }]}>\n              <Select\n                options={Object.entries(playerRoles).map(([id, name]) => ({\n                  label: name,\n                  value: id,\n                }))}\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={24}>\n            <Form.Item name=\"description\" label=\"Mô tả\">\n              <Input.TextArea style={{ width: '100%' }} />\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default PlayerEditor;\n","import { Button, Col, Layout, notification, Row, Select, Typography } from 'antd';\nimport { Header, Waiting } from 'components';\nimport { PlayerCard, PlayerEditor } from 'features/players/components';\nimport { usePlayerSlide } from 'features/players/store';\nimport { selectPlayerHandling, selectPlayersOfTeams } from 'features/players/store/selectors';\nimport type { Player } from 'features/players/types';\nimport { selectTeamData, selectTeamHandling } from 'features/teams/store/selectors';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport type { RootState } from 'types';\n\nconst Players = () => {\n  const { team: teamId } = useParams();\n\n  const dispatch = useDispatch();\n  const { actions: playersAction } = usePlayerSlide();\n  const allTeams = useSelector(selectTeamData);\n\n  const playersHandling = useSelector(selectPlayerHandling);\n  const teamsHandling = useSelector(selectTeamHandling);\n\n  const [team, setTeam] = useState(teamId || '');\n  const [editPlayer, setEditPlayer] = useState<Partial<Player>>();\n\n  const players = useSelector((state: RootState) => selectPlayersOfTeams(state, team));\n  useEffect(() => {\n    if (teamId && !players) {\n      dispatch(playersAction.getPlayers(team));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      {teamsHandling || playersHandling ? <Waiting /> : null}\n      {editPlayer ? (\n        <PlayerEditor info={editPlayer} onClose={() => setEditPlayer(undefined)} />\n      ) : null}\n      <Header\n        content={\n          <Row align=\"middle\" justify=\"space-between\">\n            <Col>\n              <Typography.Title level={4}>Danh sách cầu thủ</Typography.Title>\n            </Col>\n            <Col>\n              <Row gutter={10} align=\"middle\">\n                <Col>Chọn đội</Col>\n                <Col>\n                  <Select\n                    value={team}\n                    options={Object.values(allTeams ?? {}).map((data) => ({\n                      label: data.name,\n                      value: data.id,\n                    }))}\n                    style={{ width: 150 }}\n                    onChange={(value: string) => setTeam(value)}\n                  />\n                </Col>\n                <Col>\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      dispatch(playersAction.getPlayers(team));\n                    }}\n                  >\n                    Tìm kiếm\n                  </Button>\n                </Col>\n                <Col style={{ float: 'right', position: 'relative' }}>\n                  <Button\n                    type=\"text\"\n                    style={{ backgroundColor: '#82c91e', color: 'white' }}\n                    onClick={() => {\n                      if (!team) {\n                        notification.warning({\n                          message: 'Vui lòng chọn đội bóng',\n                        });\n                        return;\n                      }\n                      setEditPlayer({ team });\n                    }}\n                  >\n                    Thêm cầu thủ\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        }\n      />\n      <Layout style={{ overflowY: 'scroll', height: window.innerHeight - 100 }}>\n        <Row>\n          {Object.values(players ?? {}).map((player) => (\n            <Col span={6}>\n              <PlayerCard info={player} handleEdit={() => setEditPlayer(player)} />\n            </Col>\n          ))}\n        </Row>\n      </Layout>\n    </div>\n  );\n};\n\nexport default Players;\n","import _ from 'lodash';\nimport moment from 'moment';\nimport { nanoid } from 'nanoid';\n\nexport const getYearOptions = () => {\n  const currentYear = moment().year();\n  return _.range(currentYear - 10, currentYear + 10).map((year) => ({\n    label: `Năm ${year}`,\n    value: year,\n  }));\n};\n\nexport const generateID = (\n  ids: string[] = [],\n  size = 10,\n  options: { prefix?: string; suffix?: string } = {}\n): string => {\n  const id = `${options.prefix ?? ''}${nanoid(size)}${options.suffix ?? ''}`;\n  if (ids.includes(id)) return generateID(ids, size, options);\n  return id;\n};\n\nexport const parseFullName = (fullName: string) => {\n  const words = _.split(fullName, ' ');\n  return {\n    firstName: _.join(_.dropRight(words), ' '),\n    lastName: _.last(words),\n  };\n};\n","import type { RcFile } from 'antd/lib/upload';\n\nexport const getBase64 = (file: RcFile): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve((reader.result as string).toString());\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const getUrlImageBase64 = (base64: string) => `data:image/jpeg;base64,${base64}`;\n"],"names":["_ref","content","_jsx","PageHeader","style","backgroundColor","marginBottom","height","children","getPlayers","action","team","payload","result","backendService","post","kind","data","length","players","_","put","playersAction","fetchPlayers","notification","error","message","description","formatError","updatePlayer","playerData","id","playersTeam","select","state","selectPlayersOfTeams","dataUpdate","saga","all","takeEvery","type","usePlayerSlide","useInjectReducer","key","reducer","useInjectSaga","actions","initialState","handling","slice","createSlice","name","reducers","_action","selectDomain","playerStore","selectPlayerHandling","createSelector","selectLayers","selectPath","path","teamStore","selectTeamHandling","selectTeamData","linearGradientColor","playerRoles","GK","DF","CB","FB","DM","CM","FW","winger","events","shots","goals","offSide","cornerKick","errors","redCard","yellowCard","info","handleEdit","linearColor","avatar","birthday","role","Card","width","margin","borderRadius","backgroundImage","concat","overflow","bodyStyle","cover","alt","src","objectFit","_jsxs","Popover","EditOutlined","onClick","display","alignItems","textAlign","flexDirection","Col","Typography","fontWeight","fontSize","color","Row","justify","moment","year","paddingLeft","_info$birthday","onClose","dispatch","useDispatch","form","Form","useForm","image","setImage","useState","Modal","open","title","onCancel","footer","Button","async","formData","validateFields","warn","valueOf","generateID","layout","initialValues","gutter","span","Upload","Dragger","accept","listType","showUploadList","beforeUpload","base64","getBase64","file","Item","label","rules","required","Input","DatePicker","format","Select","options","Object","entries","map","_ref2","value","TextArea","Players","teamId","useParams","allTeams","useSelector","playersHandling","teamsHandling","setTeam","editPlayer","setEditPlayer","useEffect","Waiting","PlayerEditor","undefined","Header","align","Title","level","values","onChange","float","position","warning","Layout","overflowY","window","innerHeight","player","PlayerCard","_options$prefix","_options$suffix","ids","arguments","size","prefix","nanoid","suffix","includes","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","toString","onerror"],"sourceRoot":""}