{"version":3,"file":"static/js/947.cca93c06.chunk.js","mappings":"mLAMA,MAMA,EANeA,IAAA,IAAC,QAAEC,GAAgBD,EAAA,OAChCE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAO,CAAEC,gBAAiB,QAASC,aAAc,EAAGC,OAAQ,IAAKC,SAC1EP,GACU,E,8ECJf,MAAMQ,EAAgBC,IAA0B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,YAAaC,EAAAA,GAElDC,GAAqBC,EAAAA,EAAAA,IAAe,CAACL,IAAgBC,GAAUA,EAAMK,WAErEC,GAAiBF,EAAAA,EAAAA,IAAe,CAACL,IAAgBC,GAAUA,EAAMO,M,8MCE9E,MA8DA,EA9DaC,KACX,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYT,EAAAA,GAC3BU,EAAa,SAACC,EAAcC,GAAS,IAAEC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAQ,OACjEzB,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CACF1B,MAAO,CACL2B,QAAS,OACTC,eAAgB,SAChBzB,OAAQ,KAEV0B,KAAM,GAAGzB,UAETN,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CACH9B,MAAO,CACL+B,MAAO,IACPC,aAAc,GACdC,MAAO,OACPC,UAAW,SACXC,SAAU,cACNb,EAAQ,CAAEA,MAAO,IAAO,CAAEc,KAAM,KAEtCC,QAASA,IAAMtB,EAASuB,IAAAA,QAAUlB,IAAOhB,UAEzCN,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAAQrC,UAClCsC,EAAAA,EAAAA,MAAChB,EAAAA,EAAG,CAAAtB,SAAA,CACDiB,GACDvB,EAAAA,EAAAA,KAAC6C,EAAAA,EAAWC,MAAK,CAAC5C,MAAO,CAAE6C,UAAW,IAAMC,MAAO,EAAE1C,SAClDgB,YAKL,EAGR,OACEsB,EAAAA,EAAAA,MAAA,OAAAtC,SAAA,CACGa,GAAenB,EAAAA,EAAAA,KAACiD,EAAAA,EAAO,IAAM,MAC9BjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLnD,SACEC,EAAAA,EAAAA,KAAA,OAAAM,UACEN,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CAACC,QAAQ,SAAQpC,UACnBN,EAAAA,EAAAA,KAAC6C,EAAAA,EAAWC,MAAK,CAACE,MAAO,EAAE1C,SAAC,mCAKpCN,EAAAA,EAAAA,KAACmD,EAAAA,EAAM,CAACjD,MAAO,CAAE6C,UAAW,IAAKzC,UAC/BsC,EAAAA,EAAAA,MAACH,EAAAA,EAAG,CAACW,OAAQ,CAAC,GAAI,IAAKV,QAAQ,SAAQpC,SAAA,CACpCe,EAAW,WAAWrB,EAAAA,EAAAA,KAACqD,EAAAA,IAAW,CAACnD,MAAO,CAAEoD,SAAU,QAAW,GAEjEjC,EAAW,WAAWrB,EAAAA,EAAAA,KAACuD,EAAAA,IAAgB,CAACrD,MAAO,CAAEoD,SAAU,QAE3DjC,EAAW,SAASrB,EAAAA,EAAAA,KAACwD,EAAAA,IAAO,CAACtD,MAAO,CAAEoD,SAAU,QAAW,GAE3DjC,EAAW,WAAWrB,EAAAA,EAAAA,KAACyD,EAAAA,IAAe,CAACvD,MAAO,CAAEoD,SAAU,eAG3D,C","sources":["components/Header/index.tsx","features/teams/store/selectors.ts","pages/Home/index.tsx"],"sourcesContent":["import { PageHeader } from 'antd';\n\ntype Props = {\n  content: any;\n};\n\nconst Header = ({ content }: Props) => (\n  <PageHeader style={{ backgroundColor: 'white', marginBottom: 5, height: 64 }}>\n    {content}\n  </PageHeader>\n);\n\nexport default Header;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'types';\n\nimport { initialState } from './reducer';\n\nconst selectDomain = (state: RootState) => state?.teamStore || initialState;\n\nexport const selectTeamHandling = createSelector([selectDomain], (state) => state.handling);\n\nexport const selectTeamData = createSelector([selectDomain], (state) => state.data);\n","import { Card, Col, Layout, Row, Typography } from 'antd';\nimport { Header, Waiting } from 'components';\nimport { selectTeamHandling } from 'features/teams/store/selectors';\nimport _ from 'lodash';\nimport { FaPersonRunning } from 'react-icons/fa6';\nimport { FiUsers } from 'react-icons/fi';\nimport { GiChampions } from 'react-icons/gi';\nimport { PiSoccerBallFill } from 'react-icons/pi';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const teamHandling = useSelector(selectTeamHandling);\n  const renderCard = (name: string, icon: any, right: boolean = false) => (\n    <Col\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        height: 220,\n      }}\n      span={12}\n    >\n      <Card\n        style={{\n          width: 350,\n          borderRadius: 24,\n          color: 'blue',\n          textAlign: 'center',\n          position: 'absolute',\n          ...(right ? { right: 20 } : { left: 20 }),\n        }}\n        onClick={() => navigate(_.toLower(name))}\n      >\n        <Row justify=\"center\" align=\"middle\">\n          <Col>\n            {icon}\n            <Typography.Title style={{ marginTop: 20 }} level={1}>\n              {name}\n            </Typography.Title>\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n  );\n\n  return (\n    <div>\n      {teamHandling ? <Waiting /> : null}\n      <Header\n        content={\n          <div>\n            <Row justify=\"center\">\n              <Typography.Title level={4}>FootBall League Manager</Typography.Title>\n            </Row>\n          </div>\n        }\n      />\n      <Layout style={{ marginTop: 20 }}>\n        <Row gutter={[10, 50]} justify=\"center\">\n          {renderCard('Leagues', <GiChampions style={{ fontSize: 100 }} />, true)}\n\n          {renderCard('Matches', <PiSoccerBallFill style={{ fontSize: 100 }} />)}\n\n          {renderCard('Teams', <FiUsers style={{ fontSize: 100 }} />, true)}\n\n          {renderCard('Players', <FaPersonRunning style={{ fontSize: 100 }} />)}\n        </Row>\n      </Layout>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","content","_jsx","PageHeader","style","backgroundColor","marginBottom","height","children","selectDomain","state","teamStore","initialState","selectTeamHandling","createSelector","handling","selectTeamData","data","Home","navigate","useNavigate","teamHandling","useSelector","renderCard","name","icon","right","arguments","length","undefined","Col","display","justifyContent","span","Card","width","borderRadius","color","textAlign","position","left","onClick","_","Row","justify","align","_jsxs","Typography","Title","marginTop","level","Waiting","Header","Layout","gutter","GiChampions","fontSize","PiSoccerBallFill","FiUsers","FaPersonRunning"],"sourceRoot":""}